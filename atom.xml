<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SharpEdge Blog</title>
  
  <subtitle>Researches and News about DevOps, IoT and Interactive systems</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.sharpedge.ninja/"/>
  <updated>2019-01-20T13:19:46.434Z</updated>
  <id>http://blog.sharpedge.ninja/</id>
  
  <author>
    <name>Fabio Todaro</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>K8s tips: Authenticate on AWS with Kube2IAM</title>
    <link href="http://blog.sharpedge.ninja/2019/01/06/K8s-tips-Authenticate-on-AWS/"/>
    <id>http://blog.sharpedge.ninja/2019/01/06/K8s-tips-Authenticate-on-AWS/</id>
    <published>2019-01-05T23:00:00.000Z</published>
    <updated>2019-01-20T13:19:46.434Z</updated>
    
    <content type="html"><![CDATA[<p>When the pods in your kubernetes cluster need to access AWS, you have different solutions to authenticate, based on two factors: where the cluster is deployed and the grade of security you are looking for.</p><a id="more"></a><h4 id="k8s-running-outside-aws">K8s running outside AWS</h4><p>In case the cluster is deployed <strong>outside</strong> AWS you have to:</p><ul><li>Create an IAM user</li><li>Mount the <code>.aws/credentials</code> file or pass the <code>AWS_ACCESS_KEY_ID</code> and <code>AWS_SECRET_ACCESS_KEY</code> env vars, of the IAM user, to the Pod</li></ul><h4 id="k8s-running-inside-aws">K8s running inside AWS</h4><p>In case the cluster is deployed <strong>inside</strong> AWS (on EC2 instances), your solutions increase because you have access to the <em>AWS metadata service</em>!</p><h6 id="aws-metadata-service">AWS metadata service</h6><p>Almost any library written to interact with AWS try different methods to authenticate in sequence and the last, but not least, is using AWS metadata service to get a temporary token of the <em>IAM role</em> associated to the <em>EC2 Instance</em>.</p><p>This means that you could simply deploy your Pod without credentials and it will automagically authenticate using the <em>IAM Role</em> that you must have previously associated with the <em>EC2 instances</em> of your K8s nodes.</p><center><h3 style="color:orange">Little warning</h3></center><p><em>Based on how kubernetes works, if you don’t make use of <code>taint</code>/<code>tolerations</code>/<code>nodeSelectors</code>/ etc…, your Pod could be moved to any other Node if restarted for any reason, so be sure to assign the IAM role to all Nodes that could be elected to run your Pod.</em></p><center><h2 style="color:red">BIG WARNING</h2></center><p><strong><em>This approach, that seems so cool and makes you feel living in a world full of unicorns and rainbows, in reality, is the worst thing that you could do to the security of your AWS account.<br>Now ANY Pod running inside your cluster is able to access AWS using the <em>IAM Role</em> assigned to the Node!<br>I don’t think I have to explain why this is so bad.</em></strong></p><h1>Kube2IAM to the Rescue</h1><p><a href="https://github.com/jtblin/kube2iam" target="_blank" rel="noopener">Kube2IAM Github</a></p><p><a href="https://github.com/helm/charts/tree/master/stable/kube2iam" target="_blank" rel="noopener">Kube2IAM Helm Chart Github</a></p><h4 id="setup">Setup</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm install stable/kube2iam</span><br></pre></td></tr></table></figure><p>Kube2IAM, once installed, runs inside your cluster as a daemonset and does a simple thing:Intercepts all Pods requests to the AWS Metadata Service and forwards a request for a specific <em>IAM Role</em>.</p><p>To make it works there are some mandatory configs on the chart</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">host:</span></span><br><span class="line"><span class="attr">  iptables:</span> <span class="literal">true</span> <span class="comment"># Add the iptables rule to catch AWS Metadata requests</span></span><br><span class="line"><span class="attr">  interface:</span> <span class="string">weave/cali+/kube-bridge/..</span> <span class="comment"># Specify your virtual newtork interface</span></span><br></pre></td></tr></table></figure><p>and on the AWS AccountAllow Node role to assume other roles:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"Version"</span>: <span class="string">"2012-10-17"</span>,</span><br><span class="line">  <span class="attr">"Statement"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"Action"</span>: [</span><br><span class="line">        <span class="string">"sts:AssumeRole"</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">"Effect"</span>: <span class="string">"Allow"</span>,</span><br><span class="line">      <span class="attr">"Resource"</span>: <span class="string">"*"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Add a Trust Relationship with the Node role on the role that will be assumed.</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"Version"</span>: <span class="string">"2012-10-17"</span>,</span><br><span class="line">  <span class="attr">"Statement"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"Sid"</span>: <span class="string">""</span>,</span><br><span class="line">      <span class="attr">"Effect"</span>: <span class="string">"Allow"</span>,</span><br><span class="line">      <span class="attr">"Principal"</span>: &#123;</span><br><span class="line">        <span class="attr">"Service"</span>: <span class="string">"ec2.amazonaws.com"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"Action"</span>: <span class="string">"sts:AssumeRole"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"Sid"</span>: <span class="string">""</span>,</span><br><span class="line">      <span class="attr">"Effect"</span>: <span class="string">"Allow"</span>,</span><br><span class="line">      <span class="attr">"Principal"</span>: &#123;</span><br><span class="line">        <span class="attr">"AWS"</span>: <span class="string">"arn:aws:iam::123456789012:role/kubernetes-node-role"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"Action"</span>: <span class="string">"sts:AssumeRole"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="usage">Usage</h4><p>Now you have to simply indicate the role a Pod can assume using a simple annotation:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">my-pod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      annotations:</span></span><br><span class="line">        <span class="string">iam.amazonaws.com/role:</span> <span class="string">role-arn</span></span><br></pre></td></tr></table></figure><h4 id="restrictions">Restrictions</h4><p>You can indicate a default role that all Pods without annotation should assume, using an argument on Kube2IAM, this way you’ll prevent the use of the Node’s one.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">extraArgs:</span></span><br><span class="line"><span class="attr">  default-role:</span> <span class="string">app-default</span></span><br></pre></td></tr></table></figure><p>You can also restrict the roles that can be assumed inside a Namespace using an additional argument on Kube2IAM to enable it, and specifing the whitelist of roles with an annotation on the Namespace.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">extraArgs:</span></span><br><span class="line"><span class="attr">  namespace-restrictions:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Namespace</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  annotations:</span></span><br><span class="line">    <span class="string">iam.amazonaws.com/allowed-roles:</span> <span class="string">|</span></span><br><span class="line"><span class="string">      ["my-custom-path/*"]</span></span><br><span class="line"><span class="string"></span><span class="attr">  name:</span> <span class="string">default</span></span><br></pre></td></tr></table></figure><p>Your Node’s role now is safe and you have a capillary control on what AWS permissions each Pod will get, as bonus you have also automatic key rotation.</p>]]></content>
    
    <summary type="html">
    
      How to automagically authenticate your pods on AWS and secure your cluster using Kube2IAM
    
    </summary>
    
      <category term="DevOps" scheme="http://blog.sharpedge.ninja/categories/DevOps/"/>
    
    
      <category term="k8s" scheme="http://blog.sharpedge.ninja/tags/k8s/"/>
    
      <category term="kubernetes" scheme="http://blog.sharpedge.ninja/tags/kubernetes/"/>
    
      <category term="tips" scheme="http://blog.sharpedge.ninja/tags/tips/"/>
    
      <category term="security" scheme="http://blog.sharpedge.ninja/tags/security/"/>
    
  </entry>
  
  <entry>
    <title>K8s tips: Manually launch a Job from CronJob</title>
    <link href="http://blog.sharpedge.ninja/2018/11/18/K8s-tips-Run-Job-from-CronJob/"/>
    <id>http://blog.sharpedge.ninja/2018/11/18/K8s-tips-Run-Job-from-CronJob/</id>
    <published>2018-11-17T23:00:00.000Z</published>
    <updated>2018-11-18T13:24:54.991Z</updated>
    
    <content type="html"><![CDATA[<p>You just applied your new CronJob to Kubernetes and now would you like to try it?</p><p>You need to run your CronJob one time out of schedule?</p><a id="more"></a><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">batch/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">CronJob</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">my-cj</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  schedule:</span> <span class="string">"0 08 * * SAT"</span></span><br><span class="line"><span class="attr">  jobTemplate:</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      template:</span></span><br><span class="line"><span class="attr">        spec:</span></span><br><span class="line"><span class="attr">          containers:</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">my-cj-pod</span></span><br><span class="line"><span class="attr">              image:</span> <span class="string">"my-cj-image:latest"</span></span><br></pre></td></tr></table></figure><p>The first thing that could come to your mind is to temporarily change the schedule to make it run ASAP, but there is a smarter way to create a Job defined in a CronJob.</p><h2 id="solution">Solution</h2><p>Kubectl v1.10.1+ introduced the <code>kubectl create job</code> command with a <code>--from</code> option that actually accepts only a CronJob.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n my-ns create job --from=cronjob/my-cj my-job-name</span><br></pre></td></tr></table></figure><p>This command will instantly create a Job named <code>my-job-name</code> from the jobTemplate of the CronJob named <code>my-cj</code>.</p>]]></content>
    
    <summary type="html">
    
      Launch Job from CronJob with kubectl
    
    </summary>
    
      <category term="DevOps" scheme="http://blog.sharpedge.ninja/categories/DevOps/"/>
    
    
      <category term="k8s" scheme="http://blog.sharpedge.ninja/tags/k8s/"/>
    
      <category term="kubernetes" scheme="http://blog.sharpedge.ninja/tags/kubernetes/"/>
    
      <category term="tips" scheme="http://blog.sharpedge.ninja/tags/tips/"/>
    
  </entry>
  
  <entry>
    <title>EL Wire Car doors installation</title>
    <link href="http://blog.sharpedge.ninja/2017/08/14/EL-Wire-car-installation/"/>
    <id>http://blog.sharpedge.ninja/2017/08/14/EL-Wire-car-installation/</id>
    <published>2017-08-14T13:35:35.000Z</published>
    <updated>2017-12-05T12:17:21.442Z</updated>
    
    <content type="html"><![CDATA[<p>After having bought for one year this EL Wire on Ebay i finally decided to install it on my Veloster’s doors.</p><a id="more"></a><p><img src="/2017/08/14/EL-Wire-car-installation/ebay.png" alt="EL Wire Ebay"></p><p>After removing the door’s panel, the first thing was to install a plug to derivate current for the EL Wire from the illumination of the buttons.<img src="/2017/08/14/EL-Wire-car-installation/plug-1.jpg" alt="Plug 1"><img src="/2017/08/14/EL-Wire-car-installation/plug-2.jpg" alt="Plug 2"></p><p>Then i moved on studing where to pass the wire using insulating tape to keep it in position.<img src="/2017/08/14/EL-Wire-car-installation/testing.jpg" alt="Test"></p><p>After making some holes and slots the bonding work started<img src="/2017/08/14/EL-Wire-car-installation/WIP.jpg" alt="WIP"></p><p>This is the final result<img src="/2017/08/14/EL-Wire-car-installation/final-1.jpg" alt="Final 1"><img src="/2017/08/14/EL-Wire-car-installation/final-2.jpg" alt="Final 2"><img src="/2017/08/14/EL-Wire-car-installation/final-3.jpg" alt="Final 3"><img src="/2017/08/14/EL-Wire-car-installation/final-4.jpg" alt="Final 4"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;After having bought for one year this EL Wire on Ebay i finally decided to install it on my Veloster’s doors.&lt;/p&gt;
    
    </summary>
    
      <category term="Car" scheme="http://blog.sharpedge.ninja/categories/Car/"/>
    
    
      <category term="EL Wire" scheme="http://blog.sharpedge.ninja/tags/EL-Wire/"/>
    
      <category term="Tuning" scheme="http://blog.sharpedge.ninja/tags/Tuning/"/>
    
      <category term="Veloster" scheme="http://blog.sharpedge.ninja/tags/Veloster/"/>
    
  </entry>
  
  <entry>
    <title>SHA1 is broken, long life to SHA3</title>
    <link href="http://blog.sharpedge.ninja/2017/02/25/SHA1-is-dead-long-life-to-SHA3/"/>
    <id>http://blog.sharpedge.ninja/2017/02/25/SHA1-is-dead-long-life-to-SHA3/</id>
    <published>2017-02-25T14:30:19.000Z</published>
    <updated>2017-12-05T12:17:21.482Z</updated>
    
    <content type="html"><![CDATA[<p>One of the most famous Hash Algorithm, the “Secure Hash Algorithm” SHA-1 is finally dead after a team, composed by employee from Google Research and the dutch CWI, demonstrated the first collision on February 23.</p><a id="more"></a><br><p>Even if SHA-1 was deprecated in 2011 by NIST, because theoretical attacks have been known since 2005, many systems still rely on this algorithm.</p><p>These include:</p><ul><li>Digital Certificate signatures</li><li>Email PGP/GPG signatures</li><li>Software vendor signatures</li><li>Software updates</li><li>ISO checksums</li><li>Backup systems</li><li>GIT</li></ul><h2 id="why-you-should-be-worried-about-it">Why you should be worried about it?</h2><img src="/2017/02/25/SHA1-is-dead-long-life-to-SHA3/SHA-1-ill.png" title="SHA-1 Doc Collision"><p>Google demonstrated that is possible to generate two different documents (in this case PDF) with the same SHA-1 using an attack that relies on Differential cryptoanalysis and is much faster than a bruteforce.</p><p>This attack reqired 9,223,372,036,854,775,808 SHA1 computations, the equivalent of 6,500 years of single-CPU computations and 110 years of single-GPU computations.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;One of the most famous Hash Algorithm, the “Secure Hash Algorithm” SHA-1 is finally dead after a team, composed by employee from Google Research and the dutch CWI, demonstrated the first collision on February 23.&lt;/p&gt;
    
    </summary>
    
      <category term="Web" scheme="http://blog.sharpedge.ninja/categories/Web/"/>
    
    
      <category term="Security" scheme="http://blog.sharpedge.ninja/tags/Security/"/>
    
      <category term="Hash" scheme="http://blog.sharpedge.ninja/tags/Hash/"/>
    
      <category term="Algorithm" scheme="http://blog.sharpedge.ninja/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Learn AWS: Account Security</title>
    <link href="http://blog.sharpedge.ninja/2016/10/08/Learn-AWS-Account-Security/"/>
    <id>http://blog.sharpedge.ninja/2016/10/08/Learn-AWS-Account-Security/</id>
    <published>2016-10-07T22:00:00.000Z</published>
    <updated>2017-12-05T12:17:21.478Z</updated>
    
    <content type="html"><![CDATA[<h2 id="multi-factor-authentication-aka-security-first">Multi-Factor Authentication AKA Security First</h2><p>Generally speaking, in AWS you are billed monthly based on what you use hourly.AWS EC2, the service that powers virtual environments, offers a wide range of “instances” starting from 0.006$/Hour to ones that cost 13$/Hour, so it’s clear that if someone hacks your account and order some servers while you are sleeping you could find a bad news in the morning.</p><p>That’s why AWS strongly suggests you to configure MFA.</p><a id="more"></a><h3 id="what-is-mfa">What is MFA?</h3><p>Multi-Factor Authentication increase the security of your account, requiring you to insert a temporary code, during the login, generated from a MFA Device (like the one used with bank accounts) or your smartphone.</p><h3 id="how-to-enable-mfa">How to enable MFA</h3><p>After logging in, go to <strong>Security Credentials</strong> in the upper-right corner Account menu<img src="/2016/10/08/Learn-AWS-Account-Security/security-menu.png" alt="Account Menu"></p><p>AWS will ask you to setup and use IAM, another security feature that helps you to create accounts with limited permissions, but for now just click on <strong>Continue to Security Credentials</strong><img src="/2016/10/08/Learn-AWS-Account-Security/iam-popup.png" alt="IAM Pop-up"></p><p>Then open the MFA section and select <strong>Activate MFA</strong><img src="/2016/10/08/Learn-AWS-Account-Security/activate-mfa.png" alt="Activate MFA"></p><p>You’ll have 2 options:</p><ul><li>A virtual MFA device (Google authenticator or similar)</li><li>A hardware MFA device (Key fob for $12.99)</li></ul><p>Select <strong>Virtual MFA Device</strong> and install</p><h3 id="googleauthenticator">GoogleAuthenticator</h3><p><img src="/2016/10/08/Learn-AWS-Account-Security/googleauth-logo.png" alt=""><a href="https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&hl=it&utm_source=global_co&utm_medium=prtnr&utm_content=Mar2515&utm_campaign=PartBadge&pcampaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1" style="display:inline-block;overflow:hidden;background:url(https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png) no-repeat;width:165px;height:50px;background-size: 161px 61px;" target="_blank" rel="noopener"></a><a href="https://itunes.apple.com/us/app/google-authenticator/id388497605?mt=8" style="display:inline-block;overflow:hidden;background:url(https://linkmaker.itunes.apple.com/images/badges/en-us/badge_appstore-lrg.svg) no-repeat;width:165px;height:40px;" target="_blank" rel="noopener"></a><br><br>Launch the application and point the camera to the QR-code on the screen, then insert two consecutives codes generated by the application and you’re done, the next time you’ll login AWS is going to ask .<img src="/2016/10/08/Learn-AWS-Account-Security/qr-code.png" alt="QR-Code"></p><h2 id="identity-and-access-management-iam">Identity and Access Management IAM</h2><p>If you are using AWS in a team or a company, you have to make sure that each member has a user with only the necessary permissions, that’s why AWS offers you IAM.</p><h3 id="what-is-iam">What is IAM?</h3><p>With IAM you have the ability to create Users, Groups, Roles, Policies and manage them.</p><h3 id="how-to-use-iam">How to use IAM</h3><p>After logging in, go to <strong>Security Credentials</strong> in the upper-right corner Account menu<img src="/2016/10/08/Learn-AWS-Account-Security/security-menu.png" alt="Account Menu"></p><p>If you have not done it before, AWS will ask you to setup and use IAM, click on <strong>Get Started with IAM Users</strong><img src="/2016/10/08/Learn-AWS-Account-Security/iam-popup.png" alt="IAM Pop-up"></p><p><img src="/2016/10/08/Learn-AWS-Account-Security/iam-dashboard.png" alt="IAM Dashboard"></p><h3 id="security-status">Security Status</h3><p>This section of the IAM Dashboard helps you to follow initial security best practices</p><h4 id="delete-root-access-keys">Delete root access keys</h4><p>You should delete access keys on the root account to prevent external API call with your root account and use IAM users instead.</p><h4 id="activate-mfa-on-your-account">Activate MFA on your account</h4><p>By now you should have a green mark on this one because we have already activated MFA on the root account.</p><h4 id="create-individual-iam-users">Create individual IAM Users</h4><p>Create a User for any person that need access to this AWS account, even you.</p><h4 id="use-groups-to-assign-permissions">Use groups to assign permissions</h4><p>Assign permissions to Groups and not Users</p><h4 id="apply-an-iam-password-policy">Apply an IAM password policy</h4><p>Require all IAM Users to use strong passwords configuring a password policy</p><br><br>Now that you have secured your account you can sleep soundly.]]></content>
    
    <summary type="html">
    
      Add MFA to your account and increase security
    
    </summary>
    
      <category term="DevOps" scheme="http://blog.sharpedge.ninja/categories/DevOps/"/>
    
    
      <category term="AWS" scheme="http://blog.sharpedge.ninja/tags/AWS/"/>
    
      <category term="Cloud" scheme="http://blog.sharpedge.ninja/tags/Cloud/"/>
    
      <category term="MFA" scheme="http://blog.sharpedge.ninja/tags/MFA/"/>
    
  </entry>
  
  <entry>
    <title>Learn AWS: Getting Started</title>
    <link href="http://blog.sharpedge.ninja/2016/10/03/Learn-AWS-Getting-Started/"/>
    <id>http://blog.sharpedge.ninja/2016/10/03/Learn-AWS-Getting-Started/</id>
    <published>2016-10-02T22:00:00.000Z</published>
    <updated>2017-12-05T12:17:21.480Z</updated>
    
    <content type="html"><![CDATA[<h2 id="aws-and-amazon-account">AWS and Amazon Account</h2><p>First of all, you’ll need an Amazon Web Services account.</p><p>For those who suffers from <strong>CBD</strong> <em>compulsive buying disorder</em>, like me, and already have an account on <strong><a href="https://www.amazon.com" target="_blank" rel="noopener">https://www.amazon.com</a></strong>, can use that to log in AWS <strong><a href="https://aws.amazon.com" target="_blank" rel="noopener">https://aws.amazon.com</a></strong>.</p><p><img src="/2016/10/03/Learn-AWS-Getting-Started/aws-homepage.png" alt="AWS Homepage"></p><p>If you don’t have an account instead, you can register for free but you’ll have to insert a Credit Card to continue, even if you want to use the <strong>Free Tier</strong> ( <a href="/2016/10/03/Learn-AWS-Getting-Started/#free-tier">What is the Free Tier?</a> )</p><a id="more"></a><h2 id="aws-free-tier">AWS Free Tier</h2><p>Free Tier lets you use many AWS services for the first year for free.</p><h3 id="ec2">EC2</h3><ul><li>750 hours per month of Linux, RHEL, or SLES t2.micro instance usage</li><li>750 hours per month of Windows t2.micro instance usage</li></ul><p>750 hours/months for the first year are equal to an instance running 24 hours/day for an entire year for free.</p><h3 id="s3">S3</h3><ul><li>5 GB of Standard Storage</li><li>20,000 Get Requests</li><li>2,000 Put Requests</li></ul><p>As many buckets as you want and 5GB of free storage, in S3 usually you pay not only the storage but also the requests.</p><h3 id="rds">RDS</h3><ul><li>750 Hours of Amazon RDS Single-AZ db.t2.micro Instance usage</li><li>20 GB of DB Storage: any combination of General Purpose (SSD) or Magnetic</li><li>20 GB for Backups (with RDS Magnetic storage; I/Os on General Purpose [SSD] are not separately billed)</li><li>10,000,000 I/Os</li></ul><p>A relational database up for the first year with 20GB of storage and 20GB of backup and 10 millions of requests.</p><h3 id="iot">IoT</h3><ul><li>250,000 Messages (published or delivered) per month</li></ul><p>Send and receive messages with your applications all over the world</p><h3 id="ec2-container-registry">EC2 Container Registry</h3><ul><li>500 MB-month of Storage</li></ul><p>500 MB-month of storage to keep your Docker images and run them rapidly on AWS.</p><p>And many more here <a href="https://aws.amazon.com/free/" target="_blank" rel="noopener">AWS Free Tier</a></p>]]></content>
    
    <summary type="html">
    
      Important information before start diving in clouds
    
    </summary>
    
      <category term="DevOps" scheme="http://blog.sharpedge.ninja/categories/DevOps/"/>
    
    
      <category term="AWS" scheme="http://blog.sharpedge.ninja/tags/AWS/"/>
    
      <category term="Cloud" scheme="http://blog.sharpedge.ninja/tags/Cloud/"/>
    
  </entry>
  
  <entry>
    <title>Learn AWS</title>
    <link href="http://blog.sharpedge.ninja/2016/10/02/Learn-AWS/"/>
    <id>http://blog.sharpedge.ninja/2016/10/02/Learn-AWS/</id>
    <published>2016-10-01T22:00:00.000Z</published>
    <updated>2017-12-05T12:17:21.482Z</updated>
    
    <content type="html"><![CDATA[<p>I decided, while I’m continuously learning new things using AWS, to write this guide for all people like me.When I started 1 year ago with AWS, there was only the official documentation (do not misunderstand me it’s a good doc, well written and complete but for a newcomer in this world I think it’s not a good starting point).</p><h2 id="what-is-aws">What is AWS</h2><p>AWS is a suite of more than 70 cloud services ranging from Computing to Analytics.Is one of the most complete provider among its competitors, if you are going to develop a new application you can find everything you need.</p><p>The <a href="https://aws.amazon.com/documentation/" target="_blank" rel="noopener">AWS docs</a> is really huge having to cover every minimum aspect of the platform and it’s really easy to lose yourself while reading if you don’t know what to search.</p><p>I thought that a guide that covers one step at time the AWS platform could be easier to digest so here it is:</p><a id="more"></a><h2 id="summary">Summary</h2><ul><li><a href="/2016/10/03/Learn-AWS-Getting-Started/">Getting Started</a><ul><li><a href="/2016/10/03/Learn-AWS-Getting-Started/#aws-and-amazon-account">Account</a></li><li><a href="/2016/10/03/Learn-AWS-Getting-Started/#free-tier">Free Tier</a></li></ul></li><li><a href="/2016/10/08/Learn-AWS-Account-Security/">Account Security</a><ul><li><a href="/2016/10/08/Learn-AWS-Account-Security/#what-is-mfa">MFA</a></li><li><a href="/2016/10/08/Learn-AWS-Account-Security/#identity-and-access-management-iam">IAM</a></li></ul></li></ul><h2 id="main-products">Main Products</h2><ul><li>Computing<ul><li>EC2Virtual Servers for any needs</li><li>LambdaRun code in response to events</li></ul></li><li>DataBase<ul><li>RDSRelational DataBases as a Service</li><li>DynamoDBProprietary low-latency NoSQL DB</li><li>ElasticacheIn-memory caching choose between Redis or Memcached</li></ul></li><li>Storage<ul><li>S3General purpose Storage</li><li>GlacierLong term Storage</li><li>EBSScalable block storage for EC2</li><li>EFSScalable file storage for EC2</li></ul></li><li>PaaS<ul><li>OpsWorksConfigure your infrastructure and deployments with Chef</li><li>BeanstalkDeploy your app without bother with the infrastructure</li><li>CloudFormationSetup the Infrastructure as Code</li><li>ECSContainers management system</li></ul></li><li>Networking<ul><li>Route 53Managed DNS</li><li>ELBLoad Balancing</li><li>VPCIsolate your infrastructures networks</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      Learn Amazon Web Services easily Step by Step
    
    </summary>
    
      <category term="DevOps" scheme="http://blog.sharpedge.ninja/categories/DevOps/"/>
    
    
      <category term="AWS" scheme="http://blog.sharpedge.ninja/tags/AWS/"/>
    
      <category term="Cloud" scheme="http://blog.sharpedge.ninja/tags/Cloud/"/>
    
      <category term="Virtualization" scheme="http://blog.sharpedge.ninja/tags/Virtualization/"/>
    
  </entry>
  
  <entry>
    <title>How I migrated from Ghost to Hexo</title>
    <link href="http://blog.sharpedge.ninja/2016/08/01/How-I-migrated-from-Ghost-to-Hexo/"/>
    <id>http://blog.sharpedge.ninja/2016/08/01/How-I-migrated-from-Ghost-to-Hexo/</id>
    <published>2016-08-01T17:56:43.000Z</published>
    <updated>2017-12-05T12:17:21.476Z</updated>
    
    <content type="html"><![CDATA[<h2 id="a-little-bit-of-history">A little bit of history</h2><p>When I discovered Ghost 3 years ago, my initial enthusiasm, because it was bringing a wave of fresh air in this world polluted by WordPress and sites written in PHP, rapidly declined and now I’m going to briefly explain why.</p><p>Immediately I noticed that was too cumbersome working with Ghost, even if it’s just a Static Site Generator, you have to setup a nodeJS hosting with a DB, just to have some static page generation capability.</p><p>If this is not enough you have to face the lack of features, speaking of 2 years ago, it was in beta ( exactly as today, I just checked is still version 0.9.0 ).</p><p>So I left the blog to itself, themes were too complex to handle, the pleasure of writing flew away and I was too busy to take care of this little baby full of issues.</p><a id="more"></a><h3 id="what-happened-then">What happened then</h3><p>Some days ago, while I was enjoying the holidays drinking Mojitos after lunch, the blog came back to my mind.I thought that in this spare time I could check if the Ghost platform was evolved to some point and if I could maybe start again my adventure with a blog.</p><p><img src="/2016/08/01/How-I-migrated-from-Ghost-to-Hexo/holiday_ghost-blog.jpg" alt="Ghost Blog on Docker"></p><p>After some Googling I started to setup the new version of Ghost 0.9.0, to give it a try, using Docker ( i didn’t want to use OpenShift V2.0 to handle my application anymore ).</p><p>After some customization and creating the <em>docker-compose.yml</em> file I saw there were some issues with the Ghost Dockerfile not working properly.Before starting to mess again with it I choose to look around for other solutions</p><p>Googling around brought me to many posts of people tired of Ghost, for all the reasons I described above and moving to other platforms one of those being <strong>Hexo</strong>.</p><h2 id="what-is-hexo">What is Hexo</h2><p><strong>Hexo</strong>, like his big brother <strong>Jekyll</strong> ( written in <em>Ruby</em> ), is a <strong><em>real</em></strong> Static Site Generator that uses <em>NodeJS</em> to easy the pain of generating your content and then leaving you with only a public folder full of <em>html, css, js and images</em> to upload to any hosting you prefer ( like Github pages ).</p><h3 id="hexo-github-pages">Hexo + Github pages</h3><p><img src="/2016/08/01/How-I-migrated-from-Ghost-to-Hexo/github_hexo_blog.png" alt="Github pages + Hexo"></p><p>With Github pages and Hexo you get the cake and eat it too!You have:</p><ul><li>an easy to use and powerful static site generator that works well with git</li><li>free hosting that requires only a commit to update your site</li></ul><h2 id="getting-started">Getting started</h2><p>This is how you can get started with <strong>Hexo</strong></p><p>Requirements:</p><ul><li><em>NVM</em> or <em>NodeJS</em> + <em>NPM</em></li><li><em>GIT</em></li></ul><h4 id="install-hexo-cli-and-setup-your-blog">Install hexo-cli and setup your blog</h4><p>First of all, we need to install the hexo-cli to help us setup and handle the blog</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>Then move where you want to keep your blog folder and run</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init `your_blog_name`</span><br></pre></td></tr></table></figure><p>Now we must install dependencies</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> `your_blog_name`</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>And we have finished!</p><h4 id="run-hexo-server-and-create-a-post">Run Hexo Server and create a post</h4><p>To start a local server and see our blog before going online we need to launch Hexo server, it takes care of everything you need!From inside your blog folder run</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>To create a post open another terminal and, always from inside your blog folder, run</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post `My Blog Post Title`</span><br></pre></td></tr></table></figure><h4 id="publish-on-github-pages">Publish on Github pages</h4><p>To publish our site Hexo offers a <code>deploy</code> command that can use many plugins, if you stick with Github pages you need only the git one that’s already included.</p><p>First of all, we must create a repository on Github and name it like <code>SharpEdgeMarshall.github.io</code></p><p>Then paste the repository url in our <em>_config.yml</em></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repository:</span> <span class="string">git@github.com:SharpEdgeMarshall/sharpedgemarshall.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>From now on we can just run</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>or just</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy -g</span><br></pre></td></tr></table></figure><p>To get our <strong>generated site</strong> committed on Github and published on Github pages</p><p>One important thing to note is that <code>hexo deploy</code> commit only the content of the <strong>/public</strong> folder, the one that gets generated. You still have to keep your source on git ( maybe in a private repo ).</p><p>Here is a simple <strong>.gitignore</strong> to help you setup the repository.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">node_modules/</span><br><span class="line">*.log</span><br><span class="line">db.json</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      How to setup a Hexo Blog on Github Pages and be happy
    
    </summary>
    
      <category term="Web" scheme="http://blog.sharpedge.ninja/categories/Web/"/>
    
    
      <category term="Ghost" scheme="http://blog.sharpedge.ninja/tags/Ghost/"/>
    
      <category term="Hexo" scheme="http://blog.sharpedge.ninja/tags/Hexo/"/>
    
      <category term="StaticSite" scheme="http://blog.sharpedge.ninja/tags/StaticSite/"/>
    
  </entry>
  
  <entry>
    <title>AS3-Navigator</title>
    <link href="http://blog.sharpedge.ninja/2015/04/04/as3-navigator/"/>
    <id>http://blog.sharpedge.ninja/2015/04/04/as3-navigator/</id>
    <published>2015-04-04T17:29:40.000Z</published>
    <updated>2015-04-07T17:52:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>I’m pleased to announce my first library for ActionScript!</p><h2 id="as3-navigator-site"><a href="http://sharpedgemarshall.github.io/AS3-Navigator/" target="_blank" rel="noopener">AS3-Navigator Site</a></h2><div class="github-widget" data-repo="SharpEdgeMarshall/AS3-Navigator"></div><p><a href="https://travis-ci.org/SharpEdgeMarshall/AS3-Navigator" target="_blank" rel="noopener"><img src="https://travis-ci.org/SharpEdgeMarshall/AS3-Navigator.svg?branch=develop" alt=""></a> <a href="https://coveralls.io/r/SharpEdgeMarshall/AS3-Navigator?branch=develop" target="_blank" rel="noopener"><img src="https://coveralls.io/repos/SharpEdgeMarshall/AS3-Navigator/badge.svg?branch=develop" alt=""></a></p><h5 id="as3-navigator-is-a-fsm-with-views-control-in-mind-it-offers">AS3-Navigator is a FSM with views control in mind, it offers:</h5><ul><li>Fluent API</li><li>Guards</li><li>Hooks</li><li>Redirect</li></ul><a id="more"></a><p>It makes easy handling the transition of the state of your application.You can block the request of a new state with a <strong>guard</strong>, execute your code when entering some state with a <strong>hook</strong> or <strong>redirect</strong> a state to another.</p><h5 id="let-s-make-some-examples">Let’s make some examples</h5><h6 id="hook-to-load-usersdata-when-entering-userslist">Hook to load usersData when entering <em>/usersList/</em></h6><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">navigator.onEnterTo(<span class="string">"/usersList/"</span>).addHooks(LoadUsers);</span><br></pre></td></tr></table></figure><h6 id="when-entering-detail-state-userslist-user-use-a-guard-to-check-that-the-user-exist-and-then-load-userdata">When entering detail state <em>/usersList/user/</em>* use a guard to check that the user exist and then load userData</h6><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">navigator.onExitFrom(<span class="string">"/usersList/"</span>).to(<span class="string">"/usersList/user/*"</span>)</span><br><span class="line">  .addGuards(checkUserExist)</span><br><span class="line">  .addHooks(LoadUserData);</span><br></pre></td></tr></table></figure><h6 id="redirect-to-on-exit-from-about">Redirect to <em>/</em> on exit from <em>/about/</em></h6><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">navigator.onExitFrom(<span class="string">"/about/"</span>).redirectTo(<span class="string">"/"</span>);</span><br></pre></td></tr></table></figure><p>For more examples refer to the <a href="https://github.com/SharpEdgeMarshall/AS3-Navigator/blob/develop/README.md" target="_blank" rel="noopener">README.md</a> on Github</p><p>Last but not least it makes use of <strong>state of the art</strong> technology:</p><ul><li>UnitTests (Test your methods!)</li><li><a href="https://flexmojos.atlassian.net/wiki/display/FLEXMOJOS/Home" target="_blank" rel="noopener">FlexMojos</a></li><li><a href="http://flex.apache.org/download-flexunit.html" target="_blank" rel="noopener">FlexUnit</a></li><li><a href="https://github.com/drewbourne/hamcrest-as3" target="_blank" rel="noopener">Hamcrest</a></li><li><a href="http://mockolate.org/" target="_blank" rel="noopener">Mockolate</a></li><li>CodeCoverage (How much of your code have you tested?)</li><li><a href="https://coveralls.io/r/SharpEdgeMarshall/AS3-Navigator" target="_blank" rel="noopener">Coveralls</a></li><li><a href="http://cobertura.github.io/cobertura/" target="_blank" rel="noopener">Cobertura</a></li><li>Continous Integration (Automate boring tasks)</li><li><a href="https://travis-ci.org/SharpEdgeMarshall/AS3-Navigator" target="_blank" rel="noopener">Travis CI</a></li><li><a href="https://maven.apache.org/" target="_blank" rel="noopener">Maven</a></li></ul>]]></content>
    
    <summary type="html">
    
      Handle your views and routes easily in your ActionScript Application
    
    </summary>
    
      <category term="Code" scheme="http://blog.sharpedge.ninja/categories/Code/"/>
    
    
      <category term="ActionScript" scheme="http://blog.sharpedge.ninja/tags/ActionScript/"/>
    
      <category term="AS3" scheme="http://blog.sharpedge.ninja/tags/AS3/"/>
    
  </entry>
  
  <entry>
    <title>Travis CI and Coveralls with ActionScript 3</title>
    <link href="http://blog.sharpedge.ninja/2015/03/21/travis-ci-and-coveralls-with-actionscript-3/"/>
    <id>http://blog.sharpedge.ninja/2015/03/21/travis-ci-and-coveralls-with-actionscript-3/</id>
    <published>2015-03-21T11:50:51.000Z</published>
    <updated>2015-03-21T12:01:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>Waiting for a complete article about using Travis CI with Maven and Coveralls, on your ActionScript (Flex/Air/Vanilla) project, i just wanted to share with you this enhancements</p><a id="more"></a><p>First, <a href="https://github.com/SharpEdgeMarshall/AS3-Navigator/tree/develop" target="_blank" rel="noopener">here</a> you’ll find a complete working project (Travis/Maven/Coveralls) with the modifications i’m suggesting.</p><p>I’ve followed <a href="https://github.com/Larusso/travis-CI-actionscript-demo" target="_blank" rel="noopener">this</a> repo on GitHub to setup my project but i wasn’t satisfied of the result.</p><p>So i’ve made some modifications to the code after 2 days of research:</p><ul><li>I’ve edited getFpFromArchive to extract from the latest zip the .dmg because there is no more zip file inside.</li><li>Added this code to travis.yaml because Travis was searching for “flashplayer” and not “Flash Player”</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">cp</span> <span class="string">Flash\</span> <span class="string">Player\</span> <span class="string">Debugger.app/Contents/MacOS/Flash\</span> <span class="string">Player\</span> <span class="string">Debugger</span> <span class="string">Flash\</span> <span class="string">Player\</span> <span class="string">Debugger.app/Contents/MacOS/flashplayer</span></span><br></pre></td></tr></table></figure><ul><li>Update flexunit to v4.2</li></ul><h2 id="codecoverage">CodeCoverage</h2><h4 id="pom-xml">pom.xml</h4><p>To enable code coverage just add this configuration</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">coverage</span>&gt;</span>true<span class="tag">&lt;/<span class="name">coverage</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">coverageProvider</span>&gt;</span>cobertura<span class="tag">&lt;/<span class="name">coverageProvider</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">coverageReportFormat</span>&gt;</span><span class="tag">&lt;<span class="name">param</span>&gt;</span>xml<span class="tag">&lt;/<span class="name">param</span>&gt;</span><span class="tag">&lt;/<span class="name">coverageReportFormat</span>&gt;</span></span><br></pre></td></tr></table></figure><p>and this plugin</p><h4 id="pom-xml-v2">pom.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.eluder.coveralls<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>coveralls-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;<span class="name">branch</span>&gt;</span>develop<span class="tag">&lt;/<span class="name">branch</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">coberturaReports</span>&gt;</span><span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;project.build.directory&#125;/coverage/coverage.xml<span class="tag">&lt;/<span class="name">file</span>&gt;</span><span class="tag">&lt;/<span class="name">coberturaReports</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Call code coverage plugin after succes to send report to coveralls:</p><h4 id="travis-yml">travis.yml</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">after_success:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">mvn</span> <span class="attr">coveralls:report</span></span><br></pre></td></tr></table></figure><h3 id="n-b">N.B.</h3><p>if you don’t want that the report use .java extensions for your files ( it’s a bug with FlexMojos ) you should use:</p><h4 id="pom-xml-v3">pom.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">flexmojos.version</span> &gt;</span>4.2-beta<span class="tag">&lt;/<span class="name">flexmojos.version</span> &gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      How to add Continous Integration and Code Coverage on your ActionScript project
    
    </summary>
    
      <category term="DevOps" scheme="http://blog.sharpedge.ninja/categories/DevOps/"/>
    
    
      <category term="ActionScript" scheme="http://blog.sharpedge.ninja/tags/ActionScript/"/>
    
      <category term="AS3" scheme="http://blog.sharpedge.ninja/tags/AS3/"/>
    
      <category term="Travis CI" scheme="http://blog.sharpedge.ninja/tags/Travis-CI/"/>
    
      <category term="Coveralls" scheme="http://blog.sharpedge.ninja/tags/Coveralls/"/>
    
      <category term="CodeCoverage" scheme="http://blog.sharpedge.ninja/tags/CodeCoverage/"/>
    
      <category term="Maven" scheme="http://blog.sharpedge.ninja/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>Issues updating Ghost blog on Openshift</title>
    <link href="http://blog.sharpedge.ninja/2015/02/08/issues-updating-ghost-blog-on-openshift/"/>
    <id>http://blog.sharpedge.ninja/2015/02/08/issues-updating-ghost-blog-on-openshift/</id>
    <published>2015-02-08T22:57:13.000Z</published>
    <updated>2015-02-08T23:33:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>Today I decided to update Ghost platform from Version 0.3.3 to the latest 0.5.8.Looking around I discovered that you need to pass through each major update so I choosed to backup my data and start directly from the latest version injecting my data at the end of the installation.</p><a id="more"></a><h2 id="backup-your-data">Backup your data</h2><p>First of all I installed the phpmyadmin cartridge that doesn’t consume a slot.Then with the credentials showed in the open shift control panel I dumped the DB.</p><p>Secondly save the /content folder that contains all your images.</p><h2 id="reinstall">Reinstall</h2><p>I started over with the Ghost app for openshift following the guide on github and executing the command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rhc app create ghost nodejs-0.10 mysql-5.1 --env NODE_ENV=production --from-code https://github.com/openshift-quickstart/openshift-ghost-quickstart.git</span><br></pre></td></tr></table></figure><p>This command installed the version 0.5.0 of Ghost on my openshift account.Then I downloaded the latest 0.5.8 and copied the files.After this step the blog wouldn’t start anymore showing a 503 error.The error log was full of:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./core/index exited with code 0</span><br></pre></td></tr></table></figure><p>After some research I found that the problem was in package.json:I had to change:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">main: './core/index'</span><br></pre></td></tr></table></figure><p>To</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">main: './index'</span><br></pre></td></tr></table></figure><p>Then the blog started to work again!</p>]]></content>
    
    <summary type="html">
    
      How to solve Ghost updating issue on Openshift
    
    </summary>
    
      <category term="Web" scheme="http://blog.sharpedge.ninja/categories/Web/"/>
    
    
      <category term="Openshift" scheme="http://blog.sharpedge.ninja/tags/Openshift/"/>
    
      <category term="Ghost" scheme="http://blog.sharpedge.ninja/tags/Ghost/"/>
    
  </entry>
  
  <entry>
    <title>Away3D Shader (SwitchFillColor)</title>
    <link href="http://blog.sharpedge.ninja/2014/01/18/away3d-shader-switchcolorfill/"/>
    <id>http://blog.sharpedge.ninja/2014/01/18/away3d-shader-switchcolorfill/</id>
    <published>2014-01-18T15:57:55.000Z</published>
    <updated>2015-02-08T16:51:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>Here it is, my first AGAL shader for Away3D 4.1.4!Actually it’s a porting of this <a href="http://blog.volger.org/switchingcolor-shader/" target="_blank" rel="noopener">Flare3D Shader</a> done by Jonas Volger.</p><p>All started when i saw the <a href="http://www.nissan-stagejuk3d.com/" target="_blank" rel="noopener">Nissan Juke websiste</a>, if you try to change the color of the car you will see a really cool effect of a wave filling the car with the new color.</p><p>So i looked for a way to reproduce the effect and i found only two articles speaking about it, one about Flare3D and one about Alternativa3D, but no one about Away3D. After 2 days, one to learn how Away3D handle materials under the hood and one to write the code, i completed the porting of the shader to Away3D 4.1.4!</p><a id="more"></a><p>For a technical description of how it works i suggest you to look at <a href="http://blog.volger.org/switchingcolor-shader/" target="_blank" rel="noopener">Volger Bloog</a>.</p><p>Now the code:</p><h4 id="switchfillcolormaterial-as"><a href="http://SwitchFillColorMaterial.as" target="_blank" rel="noopener">SwitchFillColorMaterial.as</a></h4><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">package</span> <span class="title">it</span>.<span class="title">partner</span>.<span class="title">away3d</span>.<span class="title">materials</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> flash.geom.Vector3D;</span></span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> away3d.materials.MaterialBase;</span></span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> it.partner.away3d.materials.passes.SwitchFillColorPass;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwitchFillColorMaterial</span> <span class="keyword">extends</span> <span class="title">MaterialBase</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">var</span> sfcPass : SwitchFillColorPass;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">SwitchFillColorMaterial</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">sfcPass = <span class="keyword">new</span> SwitchFillColorPass();</span><br><span class="line">addPass(sfcPass);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">switchColor</span><span class="params">(origin:Vector3D, color:uint, alpha:Number=1.0)</span>:void</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">sfcPass.switchColor(origin, color, alpha);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="switchfillcolorpass-as"><a href="http://SwitchFillColorPass.as" target="_blank" rel="noopener">SwitchFillColorPass.as</a></h4><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">package</span> <span class="title">it</span>.<span class="title">partner</span>.<span class="title">away3d</span>.<span class="title">materials</span>.<span class="title">passes</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> flash.display3D.Context3D;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> flash.display3D.Context3DProgramType;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> flash.geom.Matrix3D;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> flash.geom.Vector3D;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> flash.utils.getTimer;</span></span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> away3d.arcane;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> away3d.cameras.Camera3D;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> away3d.core.base.IRenderable;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> away3d.core.managers.Stage3DProxy;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> away3d.materials.passes.MaterialPassBase;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="keyword">namespace</span> arcane;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwitchFillColorPass</span> <span class="keyword">extends</span> <span class="title">MaterialPassBase</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">var</span> _fData : Vector.&lt;Number&gt; = <span class="keyword">new</span> Vector.&lt;Number&gt;(<span class="number">8</span>);</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">var</span> _vData : Vector.&lt;Number&gt; = <span class="keyword">new</span> Vector.&lt;Number&gt;(<span class="number">12</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">var</span> _matrix : Matrix3D = <span class="keyword">new</span> Matrix3D();</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">var</span> _startTime : Number = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">var</span> _timeStretch : Number;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">var</span> _spread : Number;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">var</span> _origin : Vector3D = <span class="keyword">new</span> Vector3D(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">var</span> _currentColor : uint = <span class="number">0xffffff</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">var</span> _curColR : Number = <span class="number">1</span>, _curColG : Number = <span class="number">1</span>, _curColB : Number = <span class="number">1</span>, _curColA : Number = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">var</span> _newColor : uint = <span class="number">0xffffff</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">var</span> _newColR : Number = <span class="number">1</span>, _newColG : Number = <span class="number">1</span>, _newColB : Number = <span class="number">1</span>, _newColA : Number = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">SwitchFillColorPass</span><span class="params">(timeStretch:Number = 40, spread:Number=6)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">super</span>(renderToTexture);</span><br><span class="line"></span><br><span class="line"><span class="comment">// tell the material how many resources are used so it will know which to clear when switching passes.</span></span><br><span class="line">_numUsedStreams = <span class="number">2</span>; <span class="comment">// vertex position and normals</span></span><br><span class="line">_numUsedVertexConstants = <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.timeStretch = timeStretch;</span><br><span class="line"><span class="keyword">this</span>.spread = spread;</span><br><span class="line"></span><br><span class="line"><span class="comment">//origin = _origin;</span></span><br><span class="line"></span><br><span class="line">currentColor = _currentColor;</span><br><span class="line">newColor = _newColor;</span><br><span class="line"></span><br><span class="line">spread = _spread;</span><br><span class="line">_vData[<span class="number">6</span>] = <span class="number">-1</span>;</span><br><span class="line">_vData[<span class="number">7</span>] = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">_vData[<span class="number">8</span>] = <span class="number">3</span>;</span><br><span class="line">_vData[<span class="number">9</span>] = <span class="number">1</span>;</span><br><span class="line">_vData[<span class="number">10</span>] = <span class="number">0</span>;</span><br><span class="line">_vData[<span class="number">11</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">_startTime = getTimer();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span> <span class="title">spread</span><span class="params">()</span>:Number</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> _spread;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span> <span class="title">spread</span><span class="params">(value:Number)</span>:void</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">_spread = value;</span><br><span class="line">_vData[<span class="number">5</span>] = _spread;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span> <span class="title">timeStretch</span><span class="params">()</span>:Number</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> _timeStretch;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span> <span class="title">timeStretch</span><span class="params">(value:Number)</span>:void</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">_timeStretch = value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span> <span class="title">newAlpha</span><span class="params">()</span>:Number</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> _newColA;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span> <span class="title">newAlpha</span><span class="params">(value:Number)</span>:void</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">_newColA = value;</span><br><span class="line">_fData[<span class="number">7</span>] =_newColA;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span> <span class="title">currAlpha</span><span class="params">()</span>:Number</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> _curColA;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span> <span class="title">currAlpha</span><span class="params">(value:Number)</span>:void</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">_curColA = value;</span><br><span class="line">_fData[<span class="number">3</span>] =_curColA;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span> <span class="title">origin</span><span class="params">()</span>:Vector3D</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> _origin;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span> <span class="title">origin</span><span class="params">(value:Vector3D)</span>:void</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">_origin = value;</span><br><span class="line">_vData[<span class="number">0</span>] = _origin.x;</span><br><span class="line">_vData[<span class="number">1</span>] = _origin.y;</span><br><span class="line">_vData[<span class="number">2</span>] = _origin.z;</span><br><span class="line">_vData[<span class="number">3</span>] = _origin.w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span> <span class="title">newColor</span><span class="params">()</span>:uint</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> _newColor;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span> <span class="title">newColor</span><span class="params">(value:uint)</span>:void</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">_newColor = value;</span><br><span class="line"></span><br><span class="line">_fData[<span class="number">4</span>] =_newColR = ((_newColor &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>)/<span class="number">0xff</span>;</span><br><span class="line">_fData[<span class="number">5</span>] =_newColG = ((_newColor &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xff</span>)/<span class="number">0xff</span>;</span><br><span class="line">_fData[<span class="number">6</span>] =_newColB = (_newColor &amp; <span class="number">0xff</span>)/<span class="number">0xff</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span> <span class="title">currentColor</span><span class="params">()</span>:uint</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> _currentColor;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span> <span class="title">currentColor</span><span class="params">(value:uint)</span>:void</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">_currentColor = value;</span><br><span class="line"></span><br><span class="line">_fData[<span class="number">0</span>] = _curColR = ((_currentColor &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>)/<span class="number">0xff</span>;</span><br><span class="line">_fData[<span class="number">1</span>] =_curColG = ((_currentColor &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xff</span>)/<span class="number">0xff</span>;</span><br><span class="line">_fData[<span class="number">2</span>] =_curColB = (_currentColor &amp; <span class="number">0xff</span>)/<span class="number">0xff</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">switchColor</span><span class="params">(origin:Vector3D, color:uint, alpha:Number=1.0)</span>:void</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// set previous new color to the current one</span></span><br><span class="line">currentColor = _newColor;</span><br><span class="line">currAlpha = newAlpha;</span><br><span class="line"></span><br><span class="line"><span class="comment">// set new color and origin of transformation</span></span><br><span class="line">newColor = color;</span><br><span class="line">newAlpha = alpha;</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.origin = origin;</span><br><span class="line"></span><br><span class="line"><span class="comment">// save starttime, to avoid subtraction to zero in renderEvent, decrease about 1</span></span><br><span class="line">_startTime = getTimer() - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Sets the render state which is constant for this pass</span></span><br><span class="line"><span class="comment"> * @param stage3DProxy The stage3DProxy used for the current render pass</span></span><br><span class="line"><span class="comment"> * @param camera The camera currently used for rendering</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">override</span> arcane <span class="function"><span class="keyword">function</span> <span class="title">activate</span><span class="params">(stage3DProxy : Stage3DProxy, camera : Camera3D)</span> : void</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">super</span>.activate(stage3DProxy, camera);</span><br><span class="line"></span><br><span class="line">_vData[<span class="number">4</span>] = (getTimer() - _startTime) / _timeStretch;</span><br><span class="line"></span><br><span class="line">stage3DProxy._context3D.setProgramConstantsFromVector(Context3DProgramType.VERTEX, <span class="number">4</span>, _vData, <span class="number">3</span>);</span><br><span class="line">stage3DProxy._context3D.setProgramConstantsFromVector(Context3DProgramType.FRAGMENT, <span class="number">0</span>, _fData, <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Set render state for the current renderable and draw the triangles.</span></span><br><span class="line"><span class="comment"> * @param renderable The renderable that needs to be drawn.</span></span><br><span class="line"><span class="comment"> * @param stage3DProxy The stage3DProxy used for the current render pass.</span></span><br><span class="line"><span class="comment"> * @param camera The camera currently used for rendering.</span></span><br><span class="line"><span class="comment"> * @param viewProjection The matrix that transforms world space to screen space.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">override</span> arcane <span class="function"><span class="keyword">function</span> <span class="title">render</span><span class="params">(renderable : IRenderable, stage3DProxy : Stage3DProxy, camera : Camera3D, viewProjection : Matrix3D)</span> : void</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> context : Context3D = stage3DProxy._context3D;</span><br><span class="line"></span><br><span class="line"><span class="comment">// calculate model-view-projection matrix for the current renderable</span></span><br><span class="line">_matrix.copyFrom(renderable.sceneTransform);</span><br><span class="line">_matrix.append(viewProjection);</span><br><span class="line"></span><br><span class="line">renderable.activateVertexBuffer(<span class="number">0</span>, stage3DProxy);</span><br><span class="line">renderable.activateVertexNormalBuffer(<span class="number">1</span>, stage3DProxy);</span><br><span class="line"></span><br><span class="line"><span class="comment">//renderable.</span></span><br><span class="line">context.setProgramConstantsFromMatrix(Context3DProgramType.VERTEX, <span class="number">0</span>, _matrix, <span class="literal">true</span>);</span><br><span class="line">context.drawTriangles(renderable.getIndexBuffer(stage3DProxy), <span class="number">0</span>, renderable.numTriangles);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Get the vertex shader code for this shader</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">override</span> arcane <span class="function"><span class="keyword">function</span> <span class="title">getVertexCode</span><span class="params">()</span> : String</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// calculate distance between current position and distance to color change origin</span></span><br><span class="line"><span class="comment">// distance = length(iwposition.xyz - origin.xyz);</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">"sub vt1 va0.xyz vc4.xyz\n"</span> +</span><br><span class="line"><span class="string">"dp3 vt1 vt1 vt1\n"</span> +</span><br><span class="line"><span class="string">"sqt vt1 vt1\n"</span> +</span><br><span class="line"></span><br><span class="line"><span class="comment">// take position of current vertex and multiply it with the world</span></span><br><span class="line"><span class="comment">// iwposition = float4 (position,1) * world;</span></span><br><span class="line"><span class="string">"mul vt0 va0 vc0\n"</span> +</span><br><span class="line"></span><br><span class="line"><span class="comment">// adjust for aesthetics  </span></span><br><span class="line"><span class="comment">// distance /= 3;</span></span><br><span class="line"><span class="string">"div vt1 vt1 vc6.x\n"</span> +</span><br><span class="line"></span><br><span class="line"><span class="comment">// move factors into v2</span></span><br><span class="line"><span class="comment">//"mov v2 c5\n" +</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// calculate factors of current colors</span></span><br><span class="line"><span class="comment">// f1 = saturate((distance - timedelta) / spread);</span></span><br><span class="line"><span class="comment">// f2 = saturate(-((distance - timedelta) - spread) / spread);</span></span><br><span class="line"><span class="comment">//f1</span></span><br><span class="line"><span class="string">"sub vt2 vt1 vc5.x\n"</span> + <span class="comment">// distance - timedelta</span></span><br><span class="line"><span class="string">"div vt2 vt2 vc5.y\n"</span> + <span class="comment">// / spread</span></span><br><span class="line"><span class="string">"sat vt2 vt2\n"</span> +   <span class="comment">//saturate</span></span><br><span class="line"><span class="string">"mov v2.x vt2\n"</span> +    <span class="comment">// factors.x</span></span><br><span class="line"><span class="comment">//f2</span></span><br><span class="line"><span class="string">"sub vt3 vt1 vc5.x\n"</span> + <span class="comment">// distance - timedelta</span></span><br><span class="line"><span class="string">"sub vt3 vt3 vc5.y\n"</span> + <span class="comment">// -spread</span></span><br><span class="line"><span class="string">"neg vt3 vt3\n"</span> +  <span class="comment">// multiply by -1 to get -((distance - timedelta) - spread)</span></span><br><span class="line"><span class="string">"div vt3 vt3 vc5.y\n"</span> + <span class="comment">// / spread</span></span><br><span class="line"><span class="string">"sat vt3 vt3\n"</span> +      <span class="comment">// saturate</span></span><br><span class="line"><span class="string">"mov v2.y vt3\n"</span> +    <span class="comment">// factors.y</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//need to fill other v2 components</span></span><br><span class="line"><span class="string">"mov v2.z vc6.z\n"</span> +</span><br><span class="line"><span class="string">"mov v2.w vc6.w\n"</span> +</span><br><span class="line"></span><br><span class="line"><span class="comment">//mynormal = float4 (normal * world,1) * -sin(f1 * f2 / 2);</span></span><br><span class="line"><span class="string">"mul vt4 va1 vc0\n"</span> +   <span class="comment">// normal * world</span></span><br><span class="line"><span class="string">"mul vt5 vt2 vt3\n"</span> +   <span class="comment">// f1 * f2</span></span><br><span class="line"><span class="string">"div vt5 vt5 vc5.w\n"</span> + <span class="comment">// /2</span></span><br><span class="line"><span class="string">"sin vt5 vt5\n"</span> +  <span class="comment">// sin</span></span><br><span class="line"><span class="string">"neg vt5, vt5\n"</span> +  <span class="comment">// neg to get -sin</span></span><br><span class="line"><span class="string">"mul vt6 vt4 vt5\n"</span> +  <span class="comment">// multiply</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//iwposition = float4 (position,1) + mynormal;</span></span><br><span class="line"><span class="string">"add vt0 va0 vt5\n"</span> +</span><br><span class="line"></span><br><span class="line"><span class="comment">// iwposition * worldViewProj;</span></span><br><span class="line"><span class="string">"m44 op vt0 vc0"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Get the fragment shader code for this shader</span></span><br><span class="line"><span class="comment"> * @param fragmentAnimatorCode Any additional fragment animation code imposed by the framework, used by some animators. Ignore this for now, since we're not using them.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">override</span> arcane <span class="function"><span class="keyword">function</span> <span class="title">getFragmentCode</span><span class="params">(fragmentAnimatorCode : String)</span> : String</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//color = factors.x * currentcolor;</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">"mul ft0 v2.x fc0\n"</span> +</span><br><span class="line"><span class="comment">//color += factors.y * newcolor;</span></span><br><span class="line"><span class="string">"mul ft1 v2.y fc1\n"</span> +</span><br><span class="line"><span class="string">"add ft0, ft0, ft1\n"</span> +</span><br><span class="line"><span class="comment">//output</span></span><br><span class="line"><span class="string">"mov oc, ft0"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>This type of material use it’s own pass and do not consider all the other methods and passes so it’ll not be influenced by lights, texture, etc…</p><p>Maybe in the future i’ll make <strong>SwitchFillColorMethod</strong>, i just need to figure out how the hell Away3D’s methods works.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Here it is, my first AGAL shader for Away3D 4.1.4!
Actually it’s a porting of this &lt;a href=&quot;http://blog.volger.org/switchingcolor-shader/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Flare3D Shader&lt;/a&gt; done by Jonas Volger.&lt;/p&gt;
&lt;p&gt;All started when i saw the &lt;a href=&quot;http://www.nissan-stagejuk3d.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Nissan Juke websiste&lt;/a&gt;, if you try to change the color of the car you will see a really cool effect of a wave filling the car with the new color.&lt;/p&gt;
&lt;p&gt;So i looked for a way to reproduce the effect and i found only two articles speaking about it, one about Flare3D and one about Alternativa3D, but no one about Away3D. After 2 days, one to learn how Away3D handle materials under the hood and one to write the code, i completed the porting of the shader to Away3D 4.1.4!&lt;/p&gt;
    
    </summary>
    
      <category term="Code" scheme="http://blog.sharpedge.ninja/categories/Code/"/>
    
    
      <category term="Shaders" scheme="http://blog.sharpedge.ninja/tags/Shaders/"/>
    
      <category term="AGAL" scheme="http://blog.sharpedge.ninja/tags/AGAL/"/>
    
      <category term="Away3D" scheme="http://blog.sharpedge.ninja/tags/Away3D/"/>
    
  </entry>
  
  <entry>
    <title>First Post (Installing Ghost)</title>
    <link href="http://blog.sharpedge.ninja/2013/12/27/first-post/"/>
    <id>http://blog.sharpedge.ninja/2013/12/27/first-post/</id>
    <published>2013-12-27T20:48:58.000Z</published>
    <updated>2015-02-08T22:47:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is my first post on this new and exciting blogging platform.I needed 2 days to figure out how to install it, primary because it makes use of Node.js and i’m not an expert of this new technology.After i read up on it i understood that i had 3 possibilities:</p><ul><li>Dedicated Server</li><li>VPS</li><li>Hosting with Node.js</li></ul><hr><h3 id="hosting-platform">Hosting platform</h3><p>I had to find an hosting service that offers Node.js support.</p><p>After looking at some providers i’ve chosen OpenShift because i liked the gears based system</p><h2 id="more"><a id="more"></a></h2><h3 id="about-openshift">About OpenShift</h3><h4 id="what-s-a-gear">What’s a Gear</h4><p>From OpenShift site:</p><blockquote><p>A gear is a resource-constrained container that runs one or more user-specified software stacks, also known as cartridges. Each gear has a limited amount of RAM and disk space. If an application needs more resources, it can be configured to automatically use more gears.Gears come in multiple sizes to suit the needs of various software stacks.</p></blockquote><h4 id="git-source-control">GIT source control</h4><p>I liked also the handling of contents done with GIT system, with just a commit you can have your app up and running:</p><blockquote><p>All OpenShift applications are built around a Git source control workflow - you code locally, then push your changes to the server. The server then runs a number of hooks to build and configure your application, and finally restarts your application. Optionally, applications can elect to be built using Jenkins, or run using “hot deployment” which speeds up the deployment of code to OpenShift.</p></blockquote><p>This shit is awesome!</p><hr><h3 id="install-ghost">Install Ghost</h3><h4 id="install-the-cartrgide">Install the cartrgide</h4><p>The community created a <em>cartridge</em> to setup all for us:</p><ul><li>install Node.js</li><li>install MySql</li><li>install Ghost</li></ul><p><a href="https://www.openshift.com/quickstarts/ghost-with-mysql-on-openshift" target="_blank" rel="noopener">Ghost with MySQL on OpenShift</a></p><h4 id="rhc-client-tools">RHC Client Tools</h4><p>With this set of tools you can interact with the platform:</p><blockquote><p>The OpenShift client tools make it easy tocreate and deploy applications, manage domains, control access to your OpenShift applications, and give you complete control of your cloud environment.</p></blockquote><p>To install this tool you’ll need:</p><ol><li>Install GIT for windows (Command Line)</li><li>Install Ruby</li></ol><ul><li>Using “Add Ruby executables to your PATH” option</li></ul><ol start="3"><li>Install RHC tool from RubyGems using <code>gem install rhc</code></li><li>Run <code>rhc</code> and setup ssh key following the instructions</li><li>Go to OpenShift site to your app panel and do a <code>git clone</code> with the URL indicated</li></ol><p>Now you have a local repo of your blog!You can do an edit then commit and push back to OpenShift, you’ll see compilation log.</p><h3 id="ghost-blog-is-ready">Ghost Blog is Ready!</h3><p>Go to <a href="http://yourappName-yourdomainName.rhcloud.com/ghost/" target="_blank" rel="noopener">http://yourappName-yourdomainName.rhcloud.com/ghost/</a> and start writing!</p>]]></content>
    
    <summary type="html">
    
      How to install Ghost
    
    </summary>
    
      <category term="Web" scheme="http://blog.sharpedge.ninja/categories/Web/"/>
    
    
      <category term="Openshift" scheme="http://blog.sharpedge.ninja/tags/Openshift/"/>
    
      <category term="Ghost" scheme="http://blog.sharpedge.ninja/tags/Ghost/"/>
    
  </entry>
  
</feed>
