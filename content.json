{"meta":{"title":"SharpEdge Blog","subtitle":"Researches and News about DevOps, IoT and Interactive systems","description":"do { code(); } while (true)","author":"Fabio Todaro","url":"http://blog.sharpedge.ninja"},"pages":[{"title":"404","date":"2017-12-05T12:17:21.441Z","updated":"2017-12-05T12:17:21.441Z","comments":true,"path":"/404.html","permalink":"http://blog.sharpedge.ninja//404.html","excerpt":"","text":"This is not the page you are looking for."},{"title":"About Me","date":"2017-12-05T12:17:21.483Z","updated":"2017-12-05T12:17:21.483Z","comments":true,"path":"about-me/index.html","permalink":"http://blog.sharpedge.ninja/about-me/index.html","excerpt":"","text":"I’m an IT enthusiast and i’ve always loved IT since i remember. At age of 8 I started using my first PC, a Pentium III with 700Mhz and Windows 95. During my approach to this big fascinating world i discovered 3D modelling, playing first games like GTA Vice City, learning how to make custom 3d models and inject them, hack game scripts, ecc… From then on i kept learning 3D modelling while making also experiments with electronics and engines until, on high school, i finally merged 3D and programming making my first 3D interactive world based on the plant of the school. My life and my nature have led me to change field starting my job career as a Interactive Developer in an R&amp;D dept. focusing primarly on B2B advertising interactive products. This role for 3 years provided me the ability to build from the ground up a project starting from the concept to the deployment, prototyping with very short deadlines and working on cutting edge technologies like Projection Mappings, Caves, Holograms, 3D Interactive Systems based on Kinect, IR cams and other cool technologies. Then, changing company, I moved on Web field as a FullStack Developer applying my skills to the Web, working at the beginning with PHP and JS. After finding many inefficiencies to dev workflows and pipelines i decided to focus on the optimization of the entire infrastructure. This activity started to taking me more and more time until i decided to face this new challenge moving to a DevOps role, this puts me back between the Hardware and the Software (the place where i’ve always felt home). The future: I don’t know where i’ll be in 2 years from now, but i’m enjoying this role. I’m still a fan of engines and electronics, in the spare time you’ll find me building something with HighVoltage circuits and risk of death or welding a Go-Kart’s chassis."},{"title":"Categories","date":"2017-12-05T12:17:21.483Z","updated":"2017-12-05T12:17:21.483Z","comments":true,"path":"categories/index.html","permalink":"http://blog.sharpedge.ninja/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2017-12-05T12:17:21.498Z","updated":"2017-12-05T12:17:21.498Z","comments":true,"path":"tags/index.html","permalink":"http://blog.sharpedge.ninja/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"K8s tips: Manually launch a Job from CronJob","slug":"K8s-tips-Run-Job-from-CronJob","date":"2018-11-17T23:00:00.000Z","updated":"2018-11-18T13:24:54.991Z","comments":true,"path":"2018/11/18/K8s-tips-Run-Job-from-CronJob/","link":"","permalink":"http://blog.sharpedge.ninja/2018/11/18/K8s-tips-Run-Job-from-CronJob/","excerpt":"You just applied your new CronJob to Kubernetes and now would you like to try it? You need to run your CronJob one time out of schedule?","text":"You just applied your new CronJob to Kubernetes and now would you like to try it? You need to run your CronJob one time out of schedule? 12345678910111213apiVersion: batch/v1beta1kind: CronJobmetadata: name: my-cjspec: schedule: \"0 08 * * SAT\" jobTemplate: spec: template: spec: containers: - name: my-cj-pod image: \"my-cj-image:latest\" The first thing that could come to your mind is to temporarily change the schedule to make it run ASAP, but there is a smarter way to create a Job defined in a CronJob. Solution Kubectl v1.10.1+ introduced the kubectl create job command with a --from option that actually accepts only a CronJob. 1kubectl -n my-ns create job --from=cronjob/my-cj my-job-name This command will instantly create a Job named my-job-name from the jobTemplate of the CronJob named my-cj.","categories":[{"name":"DevOps","slug":"DevOps","permalink":"http://blog.sharpedge.ninja/categories/DevOps/"}],"tags":[{"name":"k8s","slug":"k8s","permalink":"http://blog.sharpedge.ninja/tags/k8s/"},{"name":"kubernetes","slug":"kubernetes","permalink":"http://blog.sharpedge.ninja/tags/kubernetes/"},{"name":"tips","slug":"tips","permalink":"http://blog.sharpedge.ninja/tags/tips/"}]},{"title":"EL Wire Car doors installation","slug":"EL-Wire-car-installation","date":"2017-08-14T13:35:35.000Z","updated":"2017-12-05T12:17:21.442Z","comments":true,"path":"2017/08/14/EL-Wire-car-installation/","link":"","permalink":"http://blog.sharpedge.ninja/2017/08/14/EL-Wire-car-installation/","excerpt":"After having bought for one year this EL Wire on Ebay i finally decided to install it on my Veloster’s doors.","text":"After having bought for one year this EL Wire on Ebay i finally decided to install it on my Veloster’s doors. After removing the door’s panel, the first thing was to install a plug to derivate current for the EL Wire from the illumination of the buttons. Then i moved on studing where to pass the wire using insulating tape to keep it in position. After making some holes and slots the bonding work started This is the final result","categories":[{"name":"Car","slug":"Car","permalink":"http://blog.sharpedge.ninja/categories/Car/"}],"tags":[{"name":"EL Wire","slug":"EL-Wire","permalink":"http://blog.sharpedge.ninja/tags/EL-Wire/"},{"name":"Tuning","slug":"Tuning","permalink":"http://blog.sharpedge.ninja/tags/Tuning/"},{"name":"Veloster","slug":"Veloster","permalink":"http://blog.sharpedge.ninja/tags/Veloster/"}]},{"title":"SHA1 is broken, long life to SHA3","slug":"SHA1-is-dead-long-life-to-SHA3","date":"2017-02-25T14:30:19.000Z","updated":"2017-12-05T12:17:21.482Z","comments":true,"path":"2017/02/25/SHA1-is-dead-long-life-to-SHA3/","link":"","permalink":"http://blog.sharpedge.ninja/2017/02/25/SHA1-is-dead-long-life-to-SHA3/","excerpt":"One of the most famous Hash Algorithm, the “Secure Hash Algorithm” SHA-1 is finally dead after a team, composed by employee from Google Research and the dutch CWI, demonstrated the first collision on February 23.","text":"One of the most famous Hash Algorithm, the “Secure Hash Algorithm” SHA-1 is finally dead after a team, composed by employee from Google Research and the dutch CWI, demonstrated the first collision on February 23. Even if SHA-1 was deprecated in 2011 by NIST, because theoretical attacks have been known since 2005, many systems still rely on this algorithm. These include: Digital Certificate signatures Email PGP/GPG signatures Software vendor signatures Software updates ISO checksums Backup systems GIT Why you should be worried about it? Google demonstrated that is possible to generate two different documents (in this case PDF) with the same SHA-1 using an attack that relies on Differential cryptoanalysis and is much faster than a bruteforce. This attack reqired 9,223,372,036,854,775,808 SHA1 computations, the equivalent of 6,500 years of single-CPU computations and 110 years of single-GPU computations.","categories":[{"name":"Web","slug":"Web","permalink":"http://blog.sharpedge.ninja/categories/Web/"}],"tags":[{"name":"Security","slug":"Security","permalink":"http://blog.sharpedge.ninja/tags/Security/"},{"name":"Hash","slug":"Hash","permalink":"http://blog.sharpedge.ninja/tags/Hash/"},{"name":"Algorithm","slug":"Algorithm","permalink":"http://blog.sharpedge.ninja/tags/Algorithm/"}]},{"title":"Learn AWS: Account Security","slug":"Learn-AWS-Account-Security","date":"2016-10-07T22:00:00.000Z","updated":"2017-12-05T12:17:21.478Z","comments":true,"path":"2016/10/08/Learn-AWS-Account-Security/","link":"","permalink":"http://blog.sharpedge.ninja/2016/10/08/Learn-AWS-Account-Security/","excerpt":"Multi-Factor Authentication AKA Security First Generally speaking, in AWS you are billed monthly based on what you use hourly. AWS EC2, the service that powers virtual environments, offers a wide range of “instances” starting from 0.006$/Hour to ones that cost 13$/Hour, so it’s clear that if someone hacks your account and order some servers while you are sleeping you could find a bad news in the morning. That’s why AWS strongly suggests you to configure MFA.","text":"Multi-Factor Authentication AKA Security First Generally speaking, in AWS you are billed monthly based on what you use hourly. AWS EC2, the service that powers virtual environments, offers a wide range of “instances” starting from 0.006$/Hour to ones that cost 13$/Hour, so it’s clear that if someone hacks your account and order some servers while you are sleeping you could find a bad news in the morning. That’s why AWS strongly suggests you to configure MFA. What is MFA? Multi-Factor Authentication increase the security of your account, requiring you to insert a temporary code, during the login, generated from a MFA Device (like the one used with bank accounts) or your smartphone. How to enable MFA After logging in, go to Security Credentials in the upper-right corner Account menu AWS will ask you to setup and use IAM, another security feature that helps you to create accounts with limited permissions, but for now just click on Continue to Security Credentials Then open the MFA section and select Activate MFA You’ll have 2 options: A virtual MFA device (Google authenticator or similar) A hardware MFA device (Key fob for $12.99) Select Virtual MFA Device and install GoogleAuthenticator Launch the application and point the camera to the QR-code on the screen, then insert two consecutives codes generated by the application and you’re done, the next time you’ll login AWS is going to ask . Identity and Access Management IAM If you are using AWS in a team or a company, you have to make sure that each member has a user with only the necessary permissions, that’s why AWS offers you IAM. What is IAM? With IAM you have the ability to create Users, Groups, Roles, Policies and manage them. How to use IAM After logging in, go to Security Credentials in the upper-right corner Account menu If you have not done it before, AWS will ask you to setup and use IAM, click on Get Started with IAM Users Security Status This section of the IAM Dashboard helps you to follow initial security best practices Delete root access keys You should delete access keys on the root account to prevent external API call with your root account and use IAM users instead. Activate MFA on your account By now you should have a green mark on this one because we have already activated MFA on the root account. Create individual IAM Users Create a User for any person that need access to this AWS account, even you. Use groups to assign permissions Assign permissions to Groups and not Users Apply an IAM password policy Require all IAM Users to use strong passwords configuring a password policy Now that you have secured your account you can sleep soundly.","categories":[{"name":"DevOps","slug":"DevOps","permalink":"http://blog.sharpedge.ninja/categories/DevOps/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://blog.sharpedge.ninja/tags/AWS/"},{"name":"Cloud","slug":"Cloud","permalink":"http://blog.sharpedge.ninja/tags/Cloud/"},{"name":"MFA","slug":"MFA","permalink":"http://blog.sharpedge.ninja/tags/MFA/"}]},{"title":"Learn AWS: Getting Started","slug":"Learn-AWS-Getting-Started","date":"2016-10-02T22:00:00.000Z","updated":"2017-12-05T12:17:21.480Z","comments":true,"path":"2016/10/03/Learn-AWS-Getting-Started/","link":"","permalink":"http://blog.sharpedge.ninja/2016/10/03/Learn-AWS-Getting-Started/","excerpt":"AWS and Amazon Account First of all, you’ll need an Amazon Web Services account. For those who suffers from CBD compulsive buying disorder, like me, and already have an account on https://www.amazon.com, can use that to log in AWS https://aws.amazon.com. If you don’t have an account instead, you can register for free but you’ll have to insert a Credit Card to continue, even if you want to use the Free Tier ( What is the Free Tier? )","text":"AWS and Amazon Account First of all, you’ll need an Amazon Web Services account. For those who suffers from CBD compulsive buying disorder, like me, and already have an account on https://www.amazon.com, can use that to log in AWS https://aws.amazon.com. If you don’t have an account instead, you can register for free but you’ll have to insert a Credit Card to continue, even if you want to use the Free Tier ( What is the Free Tier? ) AWS Free Tier Free Tier lets you use many AWS services for the first year for free. EC2 750 hours per month of Linux, RHEL, or SLES t2.micro instance usage 750 hours per month of Windows t2.micro instance usage 750 hours/months for the first year are equal to an instance running 24 hours/day for an entire year for free. S3 5 GB of Standard Storage 20,000 Get Requests 2,000 Put Requests As many buckets as you want and 5GB of free storage, in S3 usually you pay not only the storage but also the requests. RDS 750 Hours of Amazon RDS Single-AZ db.t2.micro Instance usage 20 GB of DB Storage: any combination of General Purpose (SSD) or Magnetic 20 GB for Backups (with RDS Magnetic storage; I/Os on General Purpose [SSD] are not separately billed) 10,000,000 I/Os A relational database up for the first year with 20GB of storage and 20GB of backup and 10 millions of requests. IoT 250,000 Messages (published or delivered) per month Send and receive messages with your applications all over the world EC2 Container Registry 500 MB-month of Storage 500 MB-month of storage to keep your Docker images and run them rapidly on AWS. And many more here AWS Free Tier","categories":[{"name":"DevOps","slug":"DevOps","permalink":"http://blog.sharpedge.ninja/categories/DevOps/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://blog.sharpedge.ninja/tags/AWS/"},{"name":"Cloud","slug":"Cloud","permalink":"http://blog.sharpedge.ninja/tags/Cloud/"}]},{"title":"Learn AWS","slug":"Learn-AWS","date":"2016-10-01T22:00:00.000Z","updated":"2017-12-05T12:17:21.482Z","comments":true,"path":"2016/10/02/Learn-AWS/","link":"","permalink":"http://blog.sharpedge.ninja/2016/10/02/Learn-AWS/","excerpt":"I decided, while I’m continuously learning new things using AWS, to write this guide for all people like me. When I started 1 year ago with AWS, there was only the official documentation (do not misunderstand me it’s a good doc, well written and complete but for a newcomer in this world I think it’s not a good starting point). What is AWS AWS is a suite of more than 70 cloud services ranging from Computing to Analytics. Is one of the most complete provider among its competitors, if you are going to develop a new application you can find everything you need. The AWS docs is really huge having to cover every minimum aspect of the platform and it’s really easy to lose yourself while reading if you don’t know what to search. I thought that a guide that covers one step at time the AWS platform could be easier to digest so here it is:","text":"I decided, while I’m continuously learning new things using AWS, to write this guide for all people like me. When I started 1 year ago with AWS, there was only the official documentation (do not misunderstand me it’s a good doc, well written and complete but for a newcomer in this world I think it’s not a good starting point). What is AWS AWS is a suite of more than 70 cloud services ranging from Computing to Analytics. Is one of the most complete provider among its competitors, if you are going to develop a new application you can find everything you need. The AWS docs is really huge having to cover every minimum aspect of the platform and it’s really easy to lose yourself while reading if you don’t know what to search. I thought that a guide that covers one step at time the AWS platform could be easier to digest so here it is: Summary Getting Started Account Free Tier Account Security MFA IAM Main Products Computing EC2 Virtual Servers for any needs Lambda Run code in response to events DataBase RDS Relational DataBases as a Service DynamoDB Proprietary low-latency NoSQL DB Elasticache In-memory caching choose between Redis or Memcached Storage S3 General purpose Storage Glacier Long term Storage EBS Scalable block storage for EC2 EFS Scalable file storage for EC2 PaaS OpsWorks Configure your infrastructure and deployments with Chef Beanstalk Deploy your app without bother with the infrastructure CloudFormation Setup the Infrastructure as Code ECS Containers management system Networking Route 53 Managed DNS ELB Load Balancing VPC Isolate your infrastructures networks","categories":[{"name":"DevOps","slug":"DevOps","permalink":"http://blog.sharpedge.ninja/categories/DevOps/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://blog.sharpedge.ninja/tags/AWS/"},{"name":"Cloud","slug":"Cloud","permalink":"http://blog.sharpedge.ninja/tags/Cloud/"},{"name":"Virtualization","slug":"Virtualization","permalink":"http://blog.sharpedge.ninja/tags/Virtualization/"}]},{"title":"How I migrated from Ghost to Hexo","slug":"How-I-migrated-from-Ghost-to-Hexo","date":"2016-08-01T17:56:43.000Z","updated":"2017-12-05T12:17:21.476Z","comments":true,"path":"2016/08/01/How-I-migrated-from-Ghost-to-Hexo/","link":"","permalink":"http://blog.sharpedge.ninja/2016/08/01/How-I-migrated-from-Ghost-to-Hexo/","excerpt":"A little bit of history When I discovered Ghost 3 years ago, my initial enthusiasm, because it was bringing a wave of fresh air in this world polluted by WordPress and sites written in PHP, rapidly declined and now I’m going to briefly explain why. Immediately I noticed that was too cumbersome working with Ghost, even if it’s just a Static Site Generator, you have to setup a nodeJS hosting with a DB, just to have some static page generation capability. If this is not enough you have to face the lack of features, speaking of 2 years ago, it was in beta ( exactly as today, I just checked is still version 0.9.0 ). So I left the blog to itself, themes were too complex to handle, the pleasure of writing flew away and I was too busy to take care of this little baby full of issues.","text":"A little bit of history When I discovered Ghost 3 years ago, my initial enthusiasm, because it was bringing a wave of fresh air in this world polluted by WordPress and sites written in PHP, rapidly declined and now I’m going to briefly explain why. Immediately I noticed that was too cumbersome working with Ghost, even if it’s just a Static Site Generator, you have to setup a nodeJS hosting with a DB, just to have some static page generation capability. If this is not enough you have to face the lack of features, speaking of 2 years ago, it was in beta ( exactly as today, I just checked is still version 0.9.0 ). So I left the blog to itself, themes were too complex to handle, the pleasure of writing flew away and I was too busy to take care of this little baby full of issues. What happened then Some days ago, while I was enjoying the holidays drinking Mojitos after lunch, the blog came back to my mind. I thought that in this spare time I could check if the Ghost platform was evolved to some point and if I could maybe start again my adventure with a blog. After some Googling I started to setup the new version of Ghost 0.9.0, to give it a try, using Docker ( i didn’t want to use OpenShift V2.0 to handle my application anymore ). After some customization and creating the docker-compose.yml file I saw there were some issues with the Ghost Dockerfile not working properly. Before starting to mess again with it I choose to look around for other solutions Googling around brought me to many posts of people tired of Ghost, for all the reasons I described above and moving to other platforms one of those being Hexo. What is Hexo Hexo, like his big brother Jekyll ( written in Ruby ), is a real Static Site Generator that uses NodeJS to easy the pain of generating your content and then leaving you with only a public folder full of html, css, js and images to upload to any hosting you prefer ( like Github pages ). Hexo + Github pages With Github pages and Hexo you get the cake and eat it too! You have: an easy to use and powerful static site generator that works well with git free hosting that requires only a commit to update your site Getting started This is how you can get started with Hexo Requirements: NVM or NodeJS + NPM GIT Install hexo-cli and setup your blog First of all, we need to install the hexo-cli to help us setup and handle the blog 1npm install hexo-cli -g Then move where you want to keep your blog folder and run 1hexo init `your_blog_name` Now we must install dependencies 12cd `your_blog_name`npm install And we have finished! Run Hexo Server and create a post To start a local server and see our blog before going online we need to launch Hexo server, it takes care of everything you need! From inside your blog folder run 1hexo server To create a post open another terminal and, always from inside your blog folder, run 1hexo new post `My Blog Post Title` Publish on Github pages To publish our site Hexo offers a deploy command that can use many plugins, if you stick with Github pages you need only the git one that’s already included. First of all, we must create a repository on Github and name it like SharpEdgeMarshall.github.io Then paste the repository url in our _config.yml 123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repository: git@github.com:SharpEdgeMarshall/sharpedgemarshall.github.io.git branch: master From now on we can just run 12hexo generatehexo deploy or just 1hexo deploy -g To get our generated site committed on Github and published on Github pages One important thing to note is that hexo deploy commit only the content of the /public folder, the one that gets generated. You still have to keep your source on git ( maybe in a private repo ). Here is a simple .gitignore to help you setup the repository. 123456.DS_Storenode_modules/*.logdb.jsonpublic/.deploy*/","categories":[{"name":"Web","slug":"Web","permalink":"http://blog.sharpedge.ninja/categories/Web/"}],"tags":[{"name":"Ghost","slug":"Ghost","permalink":"http://blog.sharpedge.ninja/tags/Ghost/"},{"name":"Hexo","slug":"Hexo","permalink":"http://blog.sharpedge.ninja/tags/Hexo/"},{"name":"StaticSite","slug":"StaticSite","permalink":"http://blog.sharpedge.ninja/tags/StaticSite/"}]},{"title":"AS3-Navigator","slug":"as3-navigator","date":"2015-04-04T17:29:40.000Z","updated":"2015-04-07T17:52:44.000Z","comments":true,"path":"2015/04/04/as3-navigator/","link":"","permalink":"http://blog.sharpedge.ninja/2015/04/04/as3-navigator/","excerpt":"I’m pleased to announce my first library for ActionScript! AS3-Navigator Site AS3-Navigator is a FSM with views control in mind, it offers: Fluent API Guards Hooks Redirect","text":"I’m pleased to announce my first library for ActionScript! AS3-Navigator Site AS3-Navigator is a FSM with views control in mind, it offers: Fluent API Guards Hooks Redirect It makes easy handling the transition of the state of your application. You can block the request of a new state with a guard, execute your code when entering some state with a hook or redirect a state to another. Let’s make some examples Hook to load usersData when entering /usersList/ 1navigator.onEnterTo(\"/usersList/\").addHooks(LoadUsers); When entering detail state /usersList/user/* use a guard to check that the user exist and then load userData 123navigator.onExitFrom(\"/usersList/\").to(\"/usersList/user/*\") .addGuards(checkUserExist) .addHooks(LoadUserData); Redirect to / on exit from /about/ 1navigator.onExitFrom(\"/about/\").redirectTo(\"/\"); For more examples refer to the README.md on Github Last but not least it makes use of state of the art technology: UnitTests (Test your methods!) FlexMojos FlexUnit Hamcrest Mockolate CodeCoverage (How much of your code have you tested?) Coveralls Cobertura Continous Integration (Automate boring tasks) Travis CI Maven","categories":[{"name":"Code","slug":"Code","permalink":"http://blog.sharpedge.ninja/categories/Code/"}],"tags":[{"name":"ActionScript","slug":"ActionScript","permalink":"http://blog.sharpedge.ninja/tags/ActionScript/"},{"name":"AS3","slug":"AS3","permalink":"http://blog.sharpedge.ninja/tags/AS3/"}]},{"title":"Travis CI and Coveralls with ActionScript 3","slug":"travis-ci-and-coveralls-with-actionscript-3","date":"2015-03-21T11:50:51.000Z","updated":"2015-03-21T12:01:38.000Z","comments":true,"path":"2015/03/21/travis-ci-and-coveralls-with-actionscript-3/","link":"","permalink":"http://blog.sharpedge.ninja/2015/03/21/travis-ci-and-coveralls-with-actionscript-3/","excerpt":"Waiting for a complete article about using Travis CI with Maven and Coveralls, on your ActionScript (Flex/Air/Vanilla) project, i just wanted to share with you this enhancements","text":"Waiting for a complete article about using Travis CI with Maven and Coveralls, on your ActionScript (Flex/Air/Vanilla) project, i just wanted to share with you this enhancements First, here you’ll find a complete working project (Travis/Maven/Coveralls) with the modifications i’m suggesting. I’ve followed this repo on GitHub to setup my project but i wasn’t satisfied of the result. So i’ve made some modifications to the code after 2 days of research: I’ve edited getFpFromArchive to extract from the latest zip the .dmg because there is no more zip file inside. Added this code to travis.yaml because Travis was searching for “flashplayer” and not “Flash Player” 1- cp Flash\\ Player\\ Debugger.app/Contents/MacOS/Flash\\ Player\\ Debugger Flash\\ Player\\ Debugger.app/Contents/MacOS/flashplayer Update flexunit to v4.2 CodeCoverage pom.xml To enable code coverage just add this configuration 123&lt;coverage&gt;true&lt;/coverage&gt;&lt;coverageProvider&gt;cobertura&lt;/coverageProvider&gt;&lt;coverageReportFormat&gt;&lt;param&gt;xml&lt;/param&gt;&lt;/coverageReportFormat&gt; and this plugin pom.xml 123456789&lt;plugin&gt; &lt;groupId&gt;org.eluder.coveralls&lt;/groupId&gt; &lt;artifactId&gt;coveralls-maven-plugin&lt;/artifactId&gt; &lt;version&gt;3.0.1&lt;/version&gt; &lt;configuration&gt; &lt;branch&gt;develop&lt;/branch&gt; &lt;coberturaReports&gt;&lt;file&gt;$&#123;project.build.directory&#125;/coverage/coverage.xml&lt;/file&gt;&lt;/coberturaReports&gt; &lt;/configuration&gt;&lt;/plugin&gt; Call code coverage plugin after succes to send report to coveralls: travis.yml 12after_success: - mvn coveralls:report N.B. if you don’t want that the report use .java extensions for your files ( it’s a bug with FlexMojos ) you should use: pom.xml 1&lt;flexmojos.version &gt;4.2-beta&lt;/flexmojos.version &gt;","categories":[{"name":"DevOps","slug":"DevOps","permalink":"http://blog.sharpedge.ninja/categories/DevOps/"}],"tags":[{"name":"ActionScript","slug":"ActionScript","permalink":"http://blog.sharpedge.ninja/tags/ActionScript/"},{"name":"AS3","slug":"AS3","permalink":"http://blog.sharpedge.ninja/tags/AS3/"},{"name":"Travis CI","slug":"Travis-CI","permalink":"http://blog.sharpedge.ninja/tags/Travis-CI/"},{"name":"Coveralls","slug":"Coveralls","permalink":"http://blog.sharpedge.ninja/tags/Coveralls/"},{"name":"CodeCoverage","slug":"CodeCoverage","permalink":"http://blog.sharpedge.ninja/tags/CodeCoverage/"},{"name":"Maven","slug":"Maven","permalink":"http://blog.sharpedge.ninja/tags/Maven/"}]},{"title":"Issues updating Ghost blog on Openshift","slug":"issues-updating-ghost-blog-on-openshift","date":"2015-02-08T22:57:13.000Z","updated":"2015-02-08T23:33:37.000Z","comments":true,"path":"2015/02/08/issues-updating-ghost-blog-on-openshift/","link":"","permalink":"http://blog.sharpedge.ninja/2015/02/08/issues-updating-ghost-blog-on-openshift/","excerpt":"Today I decided to update Ghost platform from Version 0.3.3 to the latest 0.5.8. Looking around I discovered that you need to pass through each major update so I choosed to backup my data and start directly from the latest version injecting my data at the end of the installation.","text":"Today I decided to update Ghost platform from Version 0.3.3 to the latest 0.5.8. Looking around I discovered that you need to pass through each major update so I choosed to backup my data and start directly from the latest version injecting my data at the end of the installation. Backup your data First of all I installed the phpmyadmin cartridge that doesn’t consume a slot. Then with the credentials showed in the open shift control panel I dumped the DB. Secondly save the /content folder that contains all your images. Reinstall I started over with the Ghost app for openshift following the guide on github and executing the command: 1rhc app create ghost nodejs-0.10 mysql-5.1 --env NODE_ENV=production --from-code https://github.com/openshift-quickstart/openshift-ghost-quickstart.git This command installed the version 0.5.0 of Ghost on my openshift account. Then I downloaded the latest 0.5.8 and copied the files. After this step the blog wouldn’t start anymore showing a 503 error. The error log was full of: 1./core/index exited with code 0 After some research I found that the problem was in package.json: I had to change: 1main: './core/index' To 1main: './index' Then the blog started to work again!","categories":[{"name":"Web","slug":"Web","permalink":"http://blog.sharpedge.ninja/categories/Web/"}],"tags":[{"name":"Openshift","slug":"Openshift","permalink":"http://blog.sharpedge.ninja/tags/Openshift/"},{"name":"Ghost","slug":"Ghost","permalink":"http://blog.sharpedge.ninja/tags/Ghost/"}]},{"title":"Away3D Shader (SwitchFillColor)","slug":"away3d-shader-switchcolorfill","date":"2014-01-18T15:57:55.000Z","updated":"2015-02-08T16:51:54.000Z","comments":true,"path":"2014/01/18/away3d-shader-switchcolorfill/","link":"","permalink":"http://blog.sharpedge.ninja/2014/01/18/away3d-shader-switchcolorfill/","excerpt":"Here it is, my first AGAL shader for Away3D 4.1.4! Actually it’s a porting of this Flare3D Shader done by Jonas Volger. All started when i saw the Nissan Juke websiste, if you try to change the color of the car you will see a really cool effect of a wave filling the car with the new color. So i looked for a way to reproduce the effect and i found only two articles speaking about it, one about Flare3D and one about Alternativa3D, but no one about Away3D. After 2 days, one to learn how Away3D handle materials under the hood and one to write the code, i completed the porting of the shader to Away3D 4.1.4!","text":"Here it is, my first AGAL shader for Away3D 4.1.4! Actually it’s a porting of this Flare3D Shader done by Jonas Volger. All started when i saw the Nissan Juke websiste, if you try to change the color of the car you will see a really cool effect of a wave filling the car with the new color. So i looked for a way to reproduce the effect and i found only two articles speaking about it, one about Flare3D and one about Alternativa3D, but no one about Away3D. After 2 days, one to learn how Away3D handle materials under the hood and one to write the code, i completed the porting of the shader to Away3D 4.1.4! For a technical description of how it works i suggest you to look at Volger Bloog. Now the code: SwitchFillColorMaterial.as 123456789101112131415161718192021222324package it.partner.away3d.materials&#123; import flash.geom.Vector3D; import away3d.materials.MaterialBase; import it.partner.away3d.materials.passes.SwitchFillColorPass; public class SwitchFillColorMaterial extends MaterialBase &#123; private var sfcPass : SwitchFillColorPass; public function SwitchFillColorMaterial() &#123; sfcPass = new SwitchFillColorPass(); addPass(sfcPass); &#125; public function switchColor(origin:Vector3D, color:uint, alpha:Number=1.0):void &#123; sfcPass.switchColor(origin, color, alpha); &#125; &#125;&#125; SwitchFillColorPass.as 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280package it.partner.away3d.materials.passes&#123; import flash.display3D.Context3D; import flash.display3D.Context3DProgramType; import flash.geom.Matrix3D; import flash.geom.Vector3D; import flash.utils.getTimer; import away3d.arcane; import away3d.cameras.Camera3D; import away3d.core.base.IRenderable; import away3d.core.managers.Stage3DProxy; import away3d.materials.passes.MaterialPassBase; use namespace arcane; public class SwitchFillColorPass extends MaterialPassBase &#123; private var _fData : Vector.&lt;Number&gt; = new Vector.&lt;Number&gt;(8); private var _vData : Vector.&lt;Number&gt; = new Vector.&lt;Number&gt;(12); private var _matrix : Matrix3D = new Matrix3D(); private var _startTime : Number = 0; private var _timeStretch : Number; private var _spread : Number; private var _origin : Vector3D = new Vector3D(0,0,0,1); private var _currentColor : uint = 0xffffff; private var _curColR : Number = 1, _curColG : Number = 1, _curColB : Number = 1, _curColA : Number = 1; private var _newColor : uint = 0xffffff; private var _newColR : Number = 1, _newColG : Number = 1, _newColB : Number = 1, _newColA : Number = 1; public function SwitchFillColorPass(timeStretch:Number = 40, spread:Number=6) &#123; super(renderToTexture); // tell the material how many resources are used so it will know which to clear when switching passes. _numUsedStreams = 2; // vertex position and normals _numUsedVertexConstants = 7; this.timeStretch = timeStretch; this.spread = spread; //origin = _origin; currentColor = _currentColor; newColor = _newColor; spread = _spread; _vData[6] = -1; _vData[7] = 2; _vData[8] = 3; _vData[9] = 1; _vData[10] = 0; _vData[11] = 0; _startTime = getTimer(); &#125; public function get spread():Number &#123; return _spread; &#125; public function set spread(value:Number):void &#123; _spread = value; _vData[5] = _spread; &#125; public function get timeStretch():Number &#123; return _timeStretch; &#125; public function set timeStretch(value:Number):void &#123; _timeStretch = value; &#125; public function get newAlpha():Number &#123; return _newColA; &#125; public function set newAlpha(value:Number):void &#123; _newColA = value; _fData[7] =_newColA; &#125; public function get currAlpha():Number &#123; return _curColA; &#125; public function set currAlpha(value:Number):void &#123; _curColA = value; _fData[3] =_curColA; &#125; public function get origin():Vector3D &#123; return _origin; &#125; public function set origin(value:Vector3D):void &#123; _origin = value; _vData[0] = _origin.x; _vData[1] = _origin.y; _vData[2] = _origin.z; _vData[3] = _origin.w; &#125; public function get newColor():uint &#123; return _newColor; &#125; public function set newColor(value:uint):void &#123; _newColor = value; _fData[4] =_newColR = ((_newColor &gt;&gt; 16) &amp; 0xff)/0xff; _fData[5] =_newColG = ((_newColor &gt;&gt; 8) &amp; 0xff)/0xff; _fData[6] =_newColB = (_newColor &amp; 0xff)/0xff; &#125; public function get currentColor():uint &#123; return _currentColor; &#125; public function set currentColor(value:uint):void &#123; _currentColor = value; _fData[0] = _curColR = ((_currentColor &gt;&gt; 16) &amp; 0xff)/0xff; _fData[1] =_curColG = ((_currentColor &gt;&gt; 8) &amp; 0xff)/0xff; _fData[2] =_curColB = (_currentColor &amp; 0xff)/0xff; &#125; public function switchColor(origin:Vector3D, color:uint, alpha:Number=1.0):void &#123; // set previous new color to the current one currentColor = _newColor; currAlpha = newAlpha; // set new color and origin of transformation newColor = color; newAlpha = alpha; this.origin = origin; // save starttime, to avoid subtraction to zero in renderEvent, decrease about 1 _startTime = getTimer() - 1; &#125; /** * Sets the render state which is constant for this pass * @param stage3DProxy The stage3DProxy used for the current render pass * @param camera The camera currently used for rendering */ override arcane function activate(stage3DProxy : Stage3DProxy, camera : Camera3D) : void &#123; super.activate(stage3DProxy, camera); _vData[4] = (getTimer() - _startTime) / _timeStretch; stage3DProxy._context3D.setProgramConstantsFromVector(Context3DProgramType.VERTEX, 4, _vData, 3); stage3DProxy._context3D.setProgramConstantsFromVector(Context3DProgramType.FRAGMENT, 0, _fData, 2); &#125; /** * Set render state for the current renderable and draw the triangles. * @param renderable The renderable that needs to be drawn. * @param stage3DProxy The stage3DProxy used for the current render pass. * @param camera The camera currently used for rendering. * @param viewProjection The matrix that transforms world space to screen space. */ override arcane function render(renderable : IRenderable, stage3DProxy : Stage3DProxy, camera : Camera3D, viewProjection : Matrix3D) : void &#123; var context : Context3D = stage3DProxy._context3D; // calculate model-view-projection matrix for the current renderable _matrix.copyFrom(renderable.sceneTransform); _matrix.append(viewProjection); renderable.activateVertexBuffer(0, stage3DProxy); renderable.activateVertexNormalBuffer(1, stage3DProxy); //renderable. context.setProgramConstantsFromMatrix(Context3DProgramType.VERTEX, 0, _matrix, true); context.drawTriangles(renderable.getIndexBuffer(stage3DProxy), 0, renderable.numTriangles); &#125; /** * Get the vertex shader code for this shader */ override arcane function getVertexCode() : String &#123; // calculate distance between current position and distance to color change origin // distance = length(iwposition.xyz - origin.xyz); return \"sub vt1 va0.xyz vc4.xyz\\n\" + \"dp3 vt1 vt1 vt1\\n\" + \"sqt vt1 vt1\\n\" + // take position of current vertex and multiply it with the world // iwposition = float4 (position,1) * world; \"mul vt0 va0 vc0\\n\" + // adjust for aesthetics // distance /= 3; \"div vt1 vt1 vc6.x\\n\" + // move factors into v2 //\"mov v2 c5\\n\" + // calculate factors of current colors // f1 = saturate((distance - timedelta) / spread); // f2 = saturate(-((distance - timedelta) - spread) / spread); //f1 \"sub vt2 vt1 vc5.x\\n\" + // distance - timedelta \"div vt2 vt2 vc5.y\\n\" + // / spread \"sat vt2 vt2\\n\" + //saturate \"mov v2.x vt2\\n\" + // factors.x //f2 \"sub vt3 vt1 vc5.x\\n\" + // distance - timedelta \"sub vt3 vt3 vc5.y\\n\" + // -spread \"neg vt3 vt3\\n\" + // multiply by -1 to get -((distance - timedelta) - spread) \"div vt3 vt3 vc5.y\\n\" + // / spread \"sat vt3 vt3\\n\" + // saturate \"mov v2.y vt3\\n\" + // factors.y //need to fill other v2 components \"mov v2.z vc6.z\\n\" + \"mov v2.w vc6.w\\n\" + //mynormal = float4 (normal * world,1) * -sin(f1 * f2 / 2); \"mul vt4 va1 vc0\\n\" + // normal * world \"mul vt5 vt2 vt3\\n\" + // f1 * f2 \"div vt5 vt5 vc5.w\\n\" + // /2 \"sin vt5 vt5\\n\" + // sin \"neg vt5, vt5\\n\" + // neg to get -sin \"mul vt6 vt4 vt5\\n\" + // multiply //iwposition = float4 (position,1) + mynormal; \"add vt0 va0 vt5\\n\" + // iwposition * worldViewProj; \"m44 op vt0 vc0\"; &#125; /** * Get the fragment shader code for this shader * @param fragmentAnimatorCode Any additional fragment animation code imposed by the framework, used by some animators. Ignore this for now, since we're not using them. */ override arcane function getFragmentCode(fragmentAnimatorCode : String) : String &#123; //color = factors.x * currentcolor; return \"mul ft0 v2.x fc0\\n\" + //color += factors.y * newcolor; \"mul ft1 v2.y fc1\\n\" + \"add ft0, ft0, ft1\\n\" + //output \"mov oc, ft0\"; &#125; &#125;&#125; This type of material use it’s own pass and do not consider all the other methods and passes so it’ll not be influenced by lights, texture, etc… Maybe in the future i’ll make SwitchFillColorMethod, i just need to figure out how the hell Away3D’s methods works.","categories":[{"name":"Code","slug":"Code","permalink":"http://blog.sharpedge.ninja/categories/Code/"}],"tags":[{"name":"Shaders","slug":"Shaders","permalink":"http://blog.sharpedge.ninja/tags/Shaders/"},{"name":"AGAL","slug":"AGAL","permalink":"http://blog.sharpedge.ninja/tags/AGAL/"},{"name":"Away3D","slug":"Away3D","permalink":"http://blog.sharpedge.ninja/tags/Away3D/"}]},{"title":"First Post (Installing Ghost)","slug":"first-post","date":"2013-12-27T20:48:58.000Z","updated":"2015-02-08T22:47:36.000Z","comments":true,"path":"2013/12/27/first-post/","link":"","permalink":"http://blog.sharpedge.ninja/2013/12/27/first-post/","excerpt":"This is my first post on this new and exciting blogging platform. I needed 2 days to figure out how to install it, primary because it makes use of Node.js and i’m not an expert of this new technology. After i read up on it i understood that i had 3 possibilities: Dedicated Server VPS Hosting with Node.js Hosting platform I had to find an hosting service that offers Node.js support. After looking at some providers i’ve chosen OpenShift because i liked the gears based system","text":"This is my first post on this new and exciting blogging platform. I needed 2 days to figure out how to install it, primary because it makes use of Node.js and i’m not an expert of this new technology. After i read up on it i understood that i had 3 possibilities: Dedicated Server VPS Hosting with Node.js Hosting platform I had to find an hosting service that offers Node.js support. After looking at some providers i’ve chosen OpenShift because i liked the gears based system About OpenShift What’s a Gear From OpenShift site: A gear is a resource-constrained container that runs one or more user-specified software stacks, also known as cartridges. Each gear has a limited amount of RAM and disk space. If an application needs more resources, it can be configured to automatically use more gears. Gears come in multiple sizes to suit the needs of various software stacks. GIT source control I liked also the handling of contents done with GIT system, with just a commit you can have your app up and running: All OpenShift applications are built around a Git source control workflow - you code locally, then push your changes to the server. The server then runs a number of hooks to build and configure your application, and finally restarts your application. Optionally, applications can elect to be built using Jenkins, or run using “hot deployment” which speeds up the deployment of code to OpenShift. This shit is awesome! Install Ghost Install the cartrgide The community created a cartridge to setup all for us: install Node.js install MySql install Ghost Ghost with MySQL on OpenShift RHC Client Tools With this set of tools you can interact with the platform: The OpenShift client tools make it easy tocreate and deploy applications, manage domains, control access to your OpenShift applications, and give you complete control of your cloud environment. To install this tool you’ll need: Install GIT for windows (Command Line) Install Ruby Using “Add Ruby executables to your PATH” option Install RHC tool from RubyGems using gem install rhc Run rhc and setup ssh key following the instructions Go to OpenShift site to your app panel and do a git clone with the URL indicated Now you have a local repo of your blog! You can do an edit then commit and push back to OpenShift, you’ll see compilation log. Ghost Blog is Ready! Go to http://yourappName-yourdomainName.rhcloud.com/ghost/ and start writing!","categories":[{"name":"Web","slug":"Web","permalink":"http://blog.sharpedge.ninja/categories/Web/"}],"tags":[{"name":"Openshift","slug":"Openshift","permalink":"http://blog.sharpedge.ninja/tags/Openshift/"},{"name":"Ghost","slug":"Ghost","permalink":"http://blog.sharpedge.ninja/tags/Ghost/"}]}]}